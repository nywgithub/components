(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[23],{"9kvl":function(e,n,t){"use strict";var r=t("FfOG");t.d(n,"a",(function(){return r["b"]}));t("bCY9")},afA6:function(e,n,t){"use strict";t.r(n);var r=t("0Owb"),i=t("q1tI"),o=t.n(i),a=t("q3YX"),l=t("qLMh"),s=t("9og8"),p=t("LtsZ"),d="/*\n * @Author: niyongwei\n * @Date: 2022-04-07 10:32:36\n * @LastEditors: niyongwei\n * @LastEditTime: 2022-04-07 10:48:31\n * @FilePath: \\git-work\\components\\src\\alert\\demo\\basic.tsx\n * @Description:\n *\n * Copyright (c) 2022 by nyw, All Rights Reserved.\n */\nimport React from 'react';\nimport Alert from '..';\nimport ConfigProvider from '../../common-provider/context';\nimport { CloseIcon } from '../../icon';\nimport '../style';\nimport './index.less';\n\nexport default () => {\n  const onClose = () => {\n    console.log('\u5173\u95ed\u4e2d');\n  };\n  return (\n    <ConfigProvider locale={'asd'}>\n      <Alert\n        kind=\"warning\"\n        closeable\n        close={\n          <span>\n            <CloseIcon />\n          </span>\n        }\n        // duration={3000}\n        onClose={onClose}\n      >\n        <div>\u8fd9\u662f\u4e00\u6761\u8b66\u544a\u63d0\u793a\uff01</div>\n      </Alert>\n      <Alert\n        kind=\"info\"\n        closeable\n        close={\n          <span>\n            <CloseIcon />\n          </span>\n        }\n        // duration={3000}\n        onClose={onClose}\n      >\n        <div>\u8fd9\u662f\u4e00\u6761\u4fe1\u606f\u63d0\u793a</div>\n      </Alert>\n      <Alert\n        kind=\"success\"\n        closeable\n        close={\n          <span>\n            <CloseIcon />\n          </span>\n        }\n        // duration={3000}\n        onClose={onClose}\n      >\n        <div>\u8fd9\u662f\u4e00\u6761\u6210\u529f\u63d0\u793a</div>\n      </Alert>\n      <Alert\n        kind=\"error\"\n        closeable\n        close={\n          <span>\n            <CloseIcon />\n          </span>\n        }\n        // duration={3000}\n        onClose={onClose}\n      >\n        <div>\u8fd9\u662f\u4e00\u6761\u5931\u8d25\u63d0\u793a</div>\n      </Alert>\n    </ConfigProvider>\n  );\n};",c="import classNames from 'classnames';\nimport t from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from '../common-provider/context';\nimport './style';\ntype ValueType = string | number;\nexport interface AlertProps {\n  /**\n   * @description       Alert \u7684\u7c7b\u578b\n   * @default           'info'\n   */\n  kind?: 'info' | 'success' | 'error' | 'warning';\n  /**\n   * @description       \u81ea\u52a8\u6d88\u5931\u7684\u65f6\u95f4\u95f4\u8ddd\uff0c\u5355\u4f4d\u6beb\u79d2\uff0c\u9ed8\u8ba4\u7a7a\n   * @default           ''\n   */\n  duration?: ValueType;\n  /**\n   * @description       \u5173\u95ed\u6309\u94ae\u7684\u56de\u8c03\n   * @default           null\n   */\n  onClose?: () => void;\n  /**\n   * @description       \u5173\u95ed\u6309\u94ae\n   * @default           x\n   */\n  close?: React.ReactNode;\n  /**\n   * @description       \u662f\u5426\u5c55\u793a\u5173\u95ed\u6309\u94ae\n   * @default           null\n   */\n  closeable?: boolean;\n}\n\nexport type KindMap = Record<Required<AlertProps>['kind'], string>;\n\nconst kinds: KindMap = {\n  info: '#5352ED',\n  success: '#2ED573',\n  error: '#FF4757',\n  warning: '#FFA502',\n};\n\nconst Alert: React.FC<AlertProps> = ({ children, kind = 'info', ...props }) => {\n  const { duration, close, onClose, closeable } = props;\n  const [timer, setTimer] = useState(null);\n  const [show, setShow] = useState<boolean>(true);\n  useEffect(() => {\n    if (!duration) return;\n    startTimer();\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, []);\n  const closeFn = () => {\n    setShow(false);\n    onClose && onClose();\n  };\n\n  const startTimer = () => {\n    let timeout = parseInt(duration as string) || 0;\n    setTimer(\n      //@ts-ignore\n      window.setTimeout(() => {\n        closeFn();\n      }, timeout),\n    );\n  };\n\n  return show ? (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('alert');\n        return (\n          <div\n            className={classNames(prefixCls, {\n              [`${prefixCls}-mask`]: duration ? true : false,\n            })}\n            style={{\n              background: kinds[kind],\n            }}\n          >\n            <div className={`${prefixCls}-content`}>{children}</div>\n            <div className={`${prefixCls}-close`}>\n              {closeable\n                ? React.cloneElement(close as any, {\n                    onClick: closeFn,\n                  })\n                : null}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  ) : null;\n};\n\nAlert.propTypes = {\n  kind: t.oneOf(['info', 'success', 'error', 'warning']),\n};\nAlert.defaultProps = {\n  close: <span>x</span>,\n  duration: '',\n  closeable: false,\n};\nexport default Alert;",u="//\u5168\u5c40\u5316\u914d\u7f6e\n\nimport * as React from 'react';\nexport interface ConfigConsumerProps {\n  //class\u540d\u524d\u7f00\u7edf\u4e00\u5904\u7406\n  getPrefixCls: (suffixCls?: string, customizePrefixCls?: string) => string;\n  //\u591a\u8bed\u914d\u7f6e\n  locale?: string;\n}\nexport interface ConfigProviderProps extends Omit<ConfigConsumerProps, 'getPrefixCls'> {\n  children?: React.ReactNode;\n}\n//\u9ed8\u8ba4\u53c2\u6570\u914d\u7f6e\u51fd\u6570\nconst defaultGetPrefixCls = (suffixCls?: string, customizePrefixCls?: string) => {\n  if (customizePrefixCls) return customizePrefixCls;\n\n  return suffixCls ? `cherry-${suffixCls}` : 'cherry';\n};\n//context\u9ed8\u8ba4\u6709\u5168\u5c40\u7684\u6837\u5f0f\u914d\u7f6e\u51fd\u6570\nexport const ConfigContext = React.createContext<ConfigConsumerProps>({\n  getPrefixCls: defaultGetPrefixCls,\n});\n\nexport const ConfigConsumer = ConfigContext.Consumer;\n//1.\u5916\u90e8\u8c03\u7528\u4f20\u503c\u7ed9ConfigProvider->\u4f20\u7ed9context->\u518d\u4f20\u7ed9\u7ec4\u4ef6\n//3.\u7ec4\u4ef6\u5904\u4f7f\u7528ConfigContext\u6765\u4f7f\u7528\u6570\u636e\nconst ConfigProvider: React.FC<ConfigProviderProps> = (props) => {\n  const { children } = props;\n  return (\n    <ConfigConsumer>\n      {(context) => {\n        console.log(context);\n        return (\n          // 2.\u4f7f\u7528provider\u5c06\u6570\u636e\u4f20\u7ed9\u7ec4\u4ef6\n          <ConfigContext.Provider\n            value={{\n              ...context,\n              ...props,\n            }}\n          >\n            {children}\n          </ConfigContext.Provider>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\nexport default ConfigProvider;",f="import './index.less';",m="@popupPrefix: cherry-alert;\n\n.@{popupPrefix} {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  color: white;\n  background: white;\n  border-radius: 3px;\n}",y="import React from 'react';\nimport {\n  FiAlertCircle,\n  FiCalendar,\n  FiCheckCircle,\n  FiChevronDown,\n  FiChevronLeft,\n  FiChevronRight,\n  FiChevronUp,\n  FiEye,\n  FiEyeOff,\n  FiHardDrive,\n  FiLoader,\n  FiUploadCloud,\n  FiUser,\n  FiVolume2,\n  FiX,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { IoMdCloseCircle } from 'react-icons/io';\n\nexport const InfoIcon = (props: any) => <FiVolume2 {...props} />;\nexport const LoadingIcon = (props: any) => <FiLoader {...props} />;\nexport const SuccessIcon = (props: any) => <FiCheckCircle {...props} />;\nexport const ErrorIcon = (props: any) => <FiXCircle {...props} />;\nexport const WarningIcon = (props: any) => <FiAlertCircle {...props} />;\nexport const CloseIcon = (props: any) => <FiX {...props} />;\nexport const UpIcon = (props: any) => <FiChevronUp {...props} />;\nexport const DownIcon = (props: any) => <FiChevronDown {...props} />;\nexport const ArrowRightIcon = (props: any) => <FiChevronRight {...props} />;\nexport const ArrowLeftIcon = (props: any) => <FiChevronLeft {...props} />;\nexport const FileUploadIcon = (props: any) => <FiUploadCloud {...props} />;\nexport const CalendarIcon = (props: any) => <FiCalendar {...props} />;\nexport const CloseCircleIcon = (props: any) => <IoMdCloseCircle {...props} />;\nexport const EmptyIcon = (props: any) => <FiHardDrive {...props} />;\nexport const UserIcon = (props: any) => <FiUser {...props} />;\nexport const PasswordShowIcon = (props: any) => <FiEye {...props} />;\nexport const PasswordHideIcon = (props: any) => <FiEyeOff {...props} />;",g=".cherry-alert{\n  margin-bottom: 20px;\n}",h='import { default as React } from \'react\';\nimport Button from \'..\';\nimport { SuccessIcon } from \'../../icon\';\nimport \'../style\';\nimport \'./button.less\';\n\nexport default () => {\n  return (\n    <div className="button-example">\n      <h2>\u57fa\u672c\u4f7f\u7528</h2>\n      <Button>\u9ed8\u8ba4</Button>\n      <Button type="primary">\u4e3b\u8272\u8c03</Button>\n      <Button type="info">\u4fe1\u606f</Button>\n      <Button type="warning">\u8b66\u544a</Button>\n      <Button type="error">\u9519\u8bef</Button>\n      <Button type="success">\u6210\u529f</Button>\n      <Button disabled>\u7981\u7528</Button>\n      <Button type="primary" dashed>\n        \u865a\u7ebf\n      </Button>\n      <Button type="primary" loading>\n        \u52a0\u8f7d\u4e2d\n      </Button>\n      {/* <Button type="primary" block>\n        100%\n      </Button> */}\n      <h2>\u7a7a\u5fc3\u6309\u94ae</h2>\n      <Button type="primary" hollow>\n        \u4e3b\u8272\u8c03\n      </Button>\n      <Button type="info" hollow>\n        \u4fe1\u606f\n      </Button>\n      <Button type="warning" hollow>\n        \u8b66\u544a\n      </Button>\n      <Button type="error" hollow>\n        \u9519\u8bef\n      </Button>\n      <Button type="success" hollow>\n        \u6210\u529f\n      </Button>\n      <Button type="error" hollow disabled>\n        \u7981\u7528\n      </Button>\n      <Button type="info" hollow dashed>\n        \u865a\u7ebf\n      </Button>\n      <Button type="error" hollow dashed disabled>\n        \u7981\u7528\n      </Button>\n      <Button type="primary" hollow loading>\n        \u52a0\u8f7d\u4e2d\n      </Button>\n      {/* <Button type="primary" hollow block>\n        100%\n      </Button> */}\n      <h2>\u7981\u7528\u72b6\u6001</h2>\n      <Button disabled>\u9ed8\u8ba4</Button>\n      <Button type="primary" disabled>\n        \u4e3b\u8272\u8c03\n      </Button>\n      <Button type="info" disabled>\n        \u4fe1\u606f\n      </Button>\n      <Button type="warning" disabled>\n        \u8b66\u544a\n      </Button>\n      <Button type="error" disabled>\n        \u9519\u8bef\n      </Button>\n      <Button type="success" disabled>\n        \u6210\u529f\n      </Button>\n      {/* <Button type="primary" disabled block>\n        100%\n      </Button> */}\n      <Button disabled hollow>\n        \u9ed8\u8ba4\n      </Button>\n      <Button type="primary" disabled hollow>\n        \u4e3b\u8272\u8c03\n      </Button>\n      <Button type="info" disabled hollow>\n        \u4fe1\u606f\n      </Button>\n      <Button type="warning" disabled hollow>\n        \u8b66\u544a\n      </Button>\n      <Button type="error" disabled hollow>\n        \u9519\u8bef\n      </Button>\n      <Button type="success" disabled hollow>\n        \u6210\u529f\n      </Button>\n      <h2>\u4e09\u79cd\u5927\u5c0f</h2>\n      <Button type="primary" size="large">\n        large\n      </Button>\n      <Button type="primary">default</Button>\n      <Button type="primary" size="small">\n        small\n      </Button>\n      <h2>\u5706\u5f62\u6309\u94ae</h2>\n      <Button type="primary" circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="info" circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="error" circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="success" circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="primary" disabled circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="warning" dashed circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="primary" hollow dashed circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="primary" loading circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="error" hollow circle>\n        <SuccessIcon />\n      </Button>\n      <Button type="info" hollow circle disabled>\n        <SuccessIcon />\n      </Button>\n      <Button type="primary" circle size="small">\n        \u5c0f\n      </Button>\n      <Button type="primary" circle>\n        \u4e2d\n      </Button>\n      <Button type="primary" circle size="large">\n        \u5927\n      </Button>\n      <h2>\u94fe\u63a5</h2>\n      <Button href="#">\u4e3b\u9875</Button>\n      <Button type="primary" href="https://github.com/nywgithub/components.git">\n        GITHUB\n      </Button>\n      <Button href="#" disabled>\n        \u7981\u7528\n      </Button>\n    </div>\n  );\n};',v="import Button from './button';\nexport { ButtonProps } from './interface';\nexport default Button;",b="import cls from 'classnames';\nimport React from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport { LoadingIcon } from '../icon';\nimport { ButtonProps } from './interface';\nconst sizes = {\n  small: 'small',\n  default: 'default',\n  large: 'large',\n};\n\nconst types = {\n  primary: 'primary',\n  default: 'default',\n  warning: 'warning',\n  success: 'success',\n  error: 'error',\n  info: 'info',\n  disabled: 'disabled',\n};\n\nconst Button: React.FC<ButtonProps> = ({ prefixCls: customizePrefixCls, ...props }) => {\n  const {\n    loading,\n    disabled,\n    block,\n    children,\n    type,\n    className,\n    htmlType,\n    onClick,\n    hollow,\n    size,\n    href,\n    dashed,\n    circle,\n    plain,\n    style,\n    ...attr\n  } = props;\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('button', customizePrefixCls);\n\n  const isDisabled = disabled || loading ? { disabled: true } : { onClick };\n\n  const baseProps = {\n    ...attr,\n    ...isDisabled,\n    type: htmlType,\n    className: cls(prefixCls, className, {\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-default`]: !disabled && type === types.default,\n      [`${prefixCls}-normal`]: type === types.default,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-loading`]: loading,\n      [`${prefixCls}-block`]: block,\n      [`${prefixCls}-hollow`]: hollow,\n      [`${prefixCls}-size-${size}`]: size !== sizes.default,\n      [`${prefixCls}-dashed`]: dashed,\n      [`${prefixCls}-circle`]: circle,\n      [`${prefixCls}-plain`]: plain,\n    }),\n  };\n  const content = (\n    <>\n      {loading && !circle && <LoadingIcon className=\"cherry-loading\" />}\n      <span>{children}</span>\n    </>\n  );\n  if (href) {\n    return (\n      //ts-ignore\n      <a\n        href={disabled ? 'javascript:void(0);' : href}\n        className={cls(`${prefixCls}-link`, className, {\n          [`${prefixCls}-link-disabled`]: disabled,\n        })}\n        {...attr}\n      >\n        {content}\n      </a>\n    );\n  }\n  return (\n    //@ts-ignore\n    <button style={style} {...baseProps}>\n      {content}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  prefixCls: 'cherry-button',\n  href: '',\n  type: types.default,\n  htmlType: 'button',\n  size: sizes.default,\n  loading: false,\n  block: false,\n  disabled: false,\n  hollow: false,\n  dashed: false,\n  circle: false,\n  plain: false,\n};\n\nexport default Button;",C="export interface ButtonProps {\n  prefixCls?: string;\n  style?: any;\n  className?: string;\n  href?: string;\n  type?: string;\n  size?: string;\n  loading?: Boolean;\n  block?: Boolean;\n  disabled?: Boolean;\n  hollow?: Boolean;\n  dashed?: Boolean;\n  circle?: Boolean;\n  plain?: Boolean;\n  htmlType?: string;\n  types?: any;\n  onClick?: () => void;\n}",x="import '../../styles';\nimport './index.less';",E='import "./index.less";',H='@import "./normalize.less";\r\n@import "./vars.less";\r\n@import "./app.less";\r\n@import "./mixins.less";\r\n@import "./animate.less";',I="@import '../../styles/vars.less';\n@import '../../styles/animate.less';\n@import '../../styles/mixins.less';\n@prefixCls: cherry-button;\n.@{prefixCls} {\n  position: relative;\n  display: inline-block;\n  height: @button-default-height;\n  margin: 0;\n  padding: @button-default-padding;\n  color: @font-color;\n  font-size: @button-default-font-size;\n  line-height: 1.5;\n  white-space: nowrap;\n  text-align: center;\n  text-shadow: @default-text-shadow;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid transparent;\n  border-color: @border-color;\n  border-radius: @border-radius;\n  outline: none;\n  cursor: pointer;\n  transition: all @default-transition;\n  user-select: none;\n  touch-action: manipulation;\n  .cherry-button-hover(@default-color);\n  &.@{prefixCls}-primary {\n    .cherry-button-hover(@primary-color);\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@primary-color);\n    }\n  }\n  &.@{prefixCls}-default {\n    color: @font-color;\n    text-shadow: none;\n    background-color: #fff;\n    border: 1px solid @default-color;\n    &:not(.@{prefixCls}-disabled):not(.@{prefixCls}-loading) {\n      &:hover,\n      &:active {\n        color: @primary-color;\n        border: 1px solid @primary-color;\n      }\n    }\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@default-color);\n    }\n  }\n  &.@{prefixCls}-warning {\n    .cherry-button-hover(@warning-color);\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@warning-color);\n    }\n  }\n  &.@{prefixCls}-error {\n    .cherry-button-hover(@error-color);\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@error-color);\n    }\n  }\n  &.@{prefixCls}-success {\n    .cherry-button-hover(@success-color);\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@success-color);\n    }\n  }\n  &.@{prefixCls}-info {\n    .cherry-button-hover(@info-color);\n    &.@{prefixCls}-hollow {\n      .cherry-button-hollow(@info-color);\n    }\n  }\n  &.@{prefixCls}-disabled {\n    cursor: not-allowed;\n    opacity: @button-disabled-opacity;\n    &.@{prefixCls}-hollow {\n      background-color: transparent !important;\n    }\n    &.@{prefixCls}-normal {\n      .cherry-button-hover(@disabled-color);\n      color: @disabled-font-color !important;\n      text-shadow: none;\n      border: 1px solid @border-color;\n      opacity: 1;\n      &.@{prefixCls}-hollow {\n        color: @disabled-font-color;\n      }\n    }\n  }\n  &.@{prefixCls}-block {\n    display: block;\n    width: 100%;\n  }\n  &.@{prefixCls}-loading {\n    cursor: not-allowed;\n    opacity: @loading-opacity;\n    > .cherry-loading {\n      display: inline-block;\n      margin: -3px 10px 0 0;\n      vertical-align: middle;\n      animation: cherry-spin @loading-time linear infinite;\n    }\n  }\n  &.@{prefixCls}-size-large {\n    height: @button-large-height;\n    padding: @button-large-padding;\n    font-size: @button-large-font-size;\n  }\n  &.@{prefixCls}-size-small {\n    height: @button-small-height;\n    padding: @button-small-padding;\n    font-size: @button-small-font-size;\n  }\n  &.@{prefixCls}-circle {\n    width: @button-default-width;\n    height: @button-default-height;\n    padding: 0;\n    border-radius: 50%;\n    box-shadow: @default-section-shadow;\n    &.@{prefixCls}-large {\n      width: @button-large-width;\n      height: @button-large-height;\n    }\n    &.@{prefixCls}-small {\n      width: @button-small-width;\n      height: @button-small-height;\n    }\n    &.@{prefixCls}-loading {\n      position: relative;\n      &:before {\n        position: absolute;\n        top: -5px;\n        left: -5px;\n        width: @button-default-width + 8px;\n        height: @button-default-width + 8px;\n        border: 1px solid @primary-color;\n        border-right: none;\n        border-bottom: none;\n        border-left: none;\n        border-radius: 50%;\n        animation: cherry-spin @loading-time @animate-type-easy-in-out infinite;\n        content: ' ';\n      }\n    }\n  }\n  &-link {\n    cursor: pointer;\n    &.@{prefixCls}-link-disabled {\n      color: @disabled-font-color;\n      cursor: not-allowed;\n    }\n  }\n}",P=".button-example{\n  .cherry-button,\n  .cherry-button-link {\n    margin: 10px 20px 20px 0;\n    svg {\n      vertical-align: middle;\n    }\n  }\n}",R="import React, { useState } from 'react';\nimport CheckBox from '..';\nimport '../style';\n\nexport default () => {\n  const [checked, setChecked] = useState(false);\n  const [gruopValue, setGruopValue] = useState(['iphone', 'huawei']);\n\n  const list = [1, 2];\n\n  const handleChange = (e: any) => {\n    console.log(e);\n    setChecked(e.props.checked);\n  };\n\n  const handleGroupChange = (evt: any) => {\n    console.log('evt', evt);\n    const value = evt.props.value;\n    const cloneValue = [...gruopValue];\n    const index = cloneValue.indexOf(value);\n    if (index !== -1) {\n      cloneValue.splice(index, 1);\n    } else {\n      cloneValue.push(value);\n    }\n    console.log(cloneValue);\n    setGruopValue(cloneValue);\n  };\n\n  return (\n    <>\n      <div>\u5355\u9009\u7ed3\u679c:{checked ? 'true' : 'false'}</div>\n      <div>\n        <CheckBox onChange={handleChange} value={'\u82f9\u679c'} checked={checked}>\n          \u82f9\u679c\n        </CheckBox>\n      </div>\n      <div>\u590d\u9009\u7ed3\u679c:{gruopValue.map((i) => i + ' ')}</div>\n      <div>\n        <CheckBox.Group\n          onChange={handleGroupChange}\n          value={gruopValue}\n          // disabled\n        >\n          <CheckBox value={'iphone'} disabled={false}>\n            iphone\n          </CheckBox>\n          <CheckBox value={'xiaomi'}>xiaomi</CheckBox>\n          <CheckBox value={'huawei'}>huawei</CheckBox>\n        </CheckBox.Group>\n      </div>\n    </>\n  );\n};",w="import CheckBox from './checkBox';\nexport type { CheckBoxProps } from './interface';\nexport default CheckBox;",L="import cls from 'classnames';\nimport React from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport CheckGroup from './checkGroup';\nimport { CheckBoxProps } from './interface';\n\nconst CheckBox = ({ prefixCls: customizePrefixCls, ...props }: CheckBoxProps) => {\n  const { style, className, onChange, checked, disabled, value, children } = props;\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('checkBox', customizePrefixCls);\n\n  const handleNativeCheckboxChange = (evt: any) => {\n    console.log(evt);\n    const e = Object.create(evt);\n    e.props = {\n      value,\n      checked: e.target?.checked,\n    };\n    onChange?.(e);\n  };\n\n  const nativeCheckbox = (\n    <input\n      className={`${prefixCls}-input`}\n      type=\"checkbox\"\n      onChange={handleNativeCheckboxChange}\n      checked={checked}\n      disabled={disabled}\n    />\n  );\n\n  return (\n    // input\u7684\u4e8b\u4ef6\u4f1a\u5192\u6ce1\u5230label\u4e0a\n    <label\n      className={cls(`${prefixCls}-wrapper`, {\n        [`${prefixCls}-checked`]: checked,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      style={style}\n    >\n      <span className={cls(prefixCls, className)}>\n        {nativeCheckbox}\n        <span className={`${prefixCls}-inner`} />\n      </span>\n      <span className={`${prefixCls}-label`}>{children}</span>\n    </label>\n  );\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  disabled: false,\n};\n\nCheckBox.Group = CheckGroup;\n\nexport default CheckBox;",M="import React from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport { CheckGroupProps } from './interface';\nconst CheckGroup: React.FC<CheckGroupProps> = ({ prefixCls: customizePrefixCls, ...props }) => {\n  const { style, className, onChange, disabled, value, children } = props;\n\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('checkBox', customizePrefixCls);\n\n  // console.log(React.Children.toArray(children))\n  // console.log(React.isValidElement(children))\n\n  // console.log(React.Children)\n\n  return (\n    <div className={`${prefixCls}-group ${className || ''}`} style={style}>\n      {React.Children.map(children, (child: any, i) => {\n        if (child?.type?.name === 'CheckBox') {\n          return React.cloneElement(child, {\n            onChange: (e: any) => {\n              onChange?.(e);\n            },\n            checked: value ? value.indexOf(child.props.value) !== -1 : child.props.checked,\n            disabled: disabled || child.props.disabled,\n          });\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  );\n};\n\nCheckGroup.defaultProps = {\n  disabled: false,\n};\n\nexport default CheckGroup;",T="import './index.less';",k="@import '../../styles/vars.less';\n@Prefix: cherry-checkBox;\n.@{Prefix} {\n  display: inline-block;\n  color: @font-color;\n  font-size: @font-size;\n  line-height: 1;\n  white-space: nowrap;\n  vertical-align: sub;\n  outline: none;\n  &-group {\n    .@{Prefix}-wrapper {\n      margin-right: @cherry-checkbox-group-offset-right;\n    }\n  }\n  &-input {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n    box-sizing: border-box;\n    padding: 0;\n    opacity: 0;\n  }\n  &.@{Prefix}-disabled {\n    cursor: not-allowed;\n  }\n  &-disabled {\n    .@{Prefix}-inner {\n      background-color: @disabled-color !important;\n      border-color: @border-color !important;\n      &::after {\n        border-color: @disabled-color;\n      }\n    }\n    .@{Prefix}-input {\n      cursor: not-allowed;\n    }\n    & + span {\n      color: @disabled-font-color;\n      cursor: not-allowed;\n    }\n  }\n  &-checked {\n    .@{Prefix}-inner {\n      background-color: @primary-color;\n      border-color: @primary-color;\n      &::after {\n        transform: rotate(45deg) scale(1); //\u52fe\u221a \u665a\u4e00\u70b9\u51fa\u73b0\n        transition: all 0.2s @animate-type 0.1s;\n      }\n    }\n    &.@{Prefix}-disabled {\n      .@{Prefix}-inner {\n        &::after {\n          border-color: fade(@font-color, 10%);\n        }\n      }\n    }\n  }\n  &-inner {\n    position: relative;\n    top: 0;\n    left: 0;\n    display: inline-block;\n    width: @cherry-checkbox-width;\n    height: @cherry-checkbox-height;\n    margin-right: @cherry-checkbox-offset-right;\n    background: #fff;\n    border: 1px solid @border-color;\n    border-radius: @border-radius - 2px;\n    transition: all @default-transition;\n    &::after {\n      position: absolute;\n      top: 2px;\n      left: 4px;\n      display: table;\n      width: 5px;\n      height: 8px;\n      border: 2px solid #fff;\n      border-top: 0;\n      border-left: 0;\n      //\u753b\u4e00\u4e2a\u77e9\u5f62 \u65cb\u8f6c45\xb0 \u5f62\u6210\u4e00\u4e2a \u221a\n      transform: rotate(45deg) scale(0);\n      transition: all 0.1s cubic-bezier(0.71, -0.46, 0.88, 0.6);\n      content: ' ';\n    }\n  }\n}\n\n.@{Prefix}-wrapper {\n  position: relative;\n  display: inline-block;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: @font-color;\n  font-size: @font-size;\n  cursor: pointer;\n  transition: all @default-transition;\n  user-select: none;\n  &.@{Prefix}-disabled {\n    cursor: not-allowed;\n  }\n}",N="import React, { useState } from 'react';\nimport Dialog, { alert, ConfirmDialog, open } from '..';\nimport Button from '../../button';\nimport '../style';\nimport './basic.less';\n\n// const { ConfirmDialog } = Dialog\n\nexport default () => {\n  const [visible, setVisible] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n  const openDialg = () => {\n    setVisible(true);\n  };\n\n  const openConfirmDialg = () => {\n    setVisible2(true);\n  };\n\n  const onOpen = () => {\n    console.log('\u6253\u5f00');\n  };\n\n  const onClose = () => {\n    setVisible(false);\n    console.log('\u5173\u95ed');\n  };\n\n  const onClose2 = () => {\n    setVisible2(false);\n    console.log('\u5173\u95ed');\n  };\n\n  function onConfirm() {\n    onClose2();\n  }\n  function onCancel() {\n    console.log('\u53d6\u6d88');\n  }\n\n  //TODO:\u5b9e\u4f8b\u6a21\u5f0f\u4e0breact\u7684\u72b6\u6001\u6539\u53d8\u4e0d\u4f1a\u53d6\u901a\u77e5\u5b9e\u4f8b\n\n  const openDialgInstance = () => {\n    let dialoger = open({\n      content: '\u5b9e\u4f8b\u5f39\u7a97\u7684\u5185\u5bb9',\n      onOpen,\n      title: '\u5b9e\u4f8b\u5f39\u7a97\u6807\u9898',\n      closeByEsc: true,\n      closeOnClickMask: true,\n      NoScroll: true,\n      footer: (\n        <div className=\"demo-bottom\">\n          <Button\n            style={{ marginRight: 10 }}\n            onClick={() => {\n              dialoger?.close();\n            }}\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => {\n              dialoger?.close();\n            }}\n          >\n            confirm\n          </Button>\n        </div>\n      ),\n    });\n  };\n\n  const openDialgInstanceSuccess = () => {\n    alert.success({\n      onOpen,\n      title: false,\n      closeByEsc: true,\n      closeOnClickMask: true,\n      NoScroll: true,\n      footer: false,\n    });\n  };\n\n  return (\n    <div className='dialog-example'>\n      <div id=\"test\"></div>\n\n      <Button onClick={openDialg}>\u6253\u5f00\u5f39\u7a97</Button>\n\n      <Button onClick={openConfirmDialg}>\u6253\u5f00confirm\u5f39\u7a97</Button>\n\n      <Button onClick={openDialgInstance}>\u6253\u5f00\u5b9e\u4f8b\u5f39\u7a97</Button>\n\n      <Button onClick={openDialgInstanceSuccess}>success</Button>\n\n      <Dialog\n        visible={visible}\n        onOpen={onOpen}\n        onClose={onClose}\n        title=\"\u6807\u9898\"\n        closeByEsc\n        closeOnClickMask\n        NoScroll\n        footer={\n          <div className=\"demo-bottom\">\n            <Button style={{ marginRight: 10 }} onClick={onClose}>\n              cancel\n            </Button>\n            <Button onClick={onClose}>confirm</Button>\n          </div>\n        }\n      >\n        \u5f39\u7a97\u5185\u5bb9\n      </Dialog>\n      <ConfirmDialog\n        visible={visible2}\n        onOpen={onOpen}\n        onClose={onClose2}\n        confirmContent={'\u786e\u8ba4'}\n        confirm={onConfirm}\n        cancel={onCancel}\n        cancelContent={'\u53d6\u6d88'}\n        title=\"\u6807\u9898\"\n        closeByEsc\n        closeOnClickMask\n        NoScroll\n      >\n        confrim\u5f39\u7a97\u5185\u5bb9\n      </ConfirmDialog>\n    </div>\n  );\n};",D="import ConfirmDialog from './confirmDialog';\nimport Dialog from './dialog';\nexport { clear } from './clear';\nexport type { DialogProps } from './interface';\nexport { alert, open } from './open';\nexport { ConfirmDialog };\n\nexport default Dialog;",S="import React from 'react';\nimport Button from '../button';\nimport { ConfigContext } from '../common-provider/context';\nimport Dialog from './dialog';\nimport { DialogProps } from './interface';\n\nexport interface confirmDialogProps extends DialogProps {\n  cancelContent?: string | React.ReactNode;\n  confirmContent?: string | React.ReactNode;\n  cancel?: () => void;\n  confirm?: () => void;\n}\n\nconst ConfirmDialog: React.FC<confirmDialogProps> = ({\n  prefixCls: customizePrefixCls,\n  ...props\n}) => {\n  const { children, cancelContent, confirmContent, cancel, confirm, ...otherProps } = props;\n\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('dialog', customizePrefixCls);\n\n  const handleCancel = () => {\n    otherProps?.onClose?.();\n    cancel?.();\n  };\n\n  const handleConfirm = () => {\n    confirm?.();\n  };\n\n  return (\n    <Dialog\n      footer={\n        <div className={`${prefixCls}-bottom`}>\n          <Button style={{ marginRight: 10 }} onClick={handleCancel}>\n            {cancelContent || 'cancel'}\n          </Button>\n          <Button onClick={handleConfirm}>{confirmContent || 'confirm'}</Button>\n        </div>\n      }\n      {...otherProps}\n    >\n      {children}\n    </Dialog>\n  );\n};\n\nexport default ConfirmDialog;",O="import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport React, { useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { ConfigContext } from '../common-provider/context';\r\nimport Portal from '../popover/portal';\r\nimport { useCloseByEsc } from '../util/closeByEsc';\r\n// import ConfirmDialog from './confirmDialog';\r\nimport { DialogProps } from './interface';\r\n\r\n//TODO:visible\u6539\u6210\u53d7\u63a7\u7684\r\n\r\nconst Dialog: React.FC<DialogProps> = ({ prefixCls: customizePrefixCls, ...props }) => {\r\n  const {\r\n    style,\r\n    className,\r\n    children,\r\n    visible,\r\n    mask,\r\n    delay,\r\n    title,\r\n    footer,\r\n    closeIcon,\r\n    closeOnClickMask,\r\n    NoScroll,\r\n    closeByEsc,\r\n    onClose,\r\n    onClosed,\r\n    onOpen,\r\n    onOpened,\r\n  } = props;\r\n\r\n  const { getPrefixCls } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('dialog', customizePrefixCls);\r\n\r\n  const handleVisible = (show: boolean) => {\r\n    show ? onOpen?.() : onClose?.();\r\n  };\r\n\r\n  const closeDialog = () => handleVisible(false);\r\n\r\n  const openDialog = () => handleVisible(true);\r\n\r\n  const dialogRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      openDialog();\r\n      NoScroll && disableBodyScroll(dialogRef as unknown as HTMLElement | Element);\r\n    } else {\r\n      NoScroll && enableBodyScroll(dialogRef as unknown as HTMLElement | Element);\r\n    }\r\n  }, [visible]);\r\n\r\n  const dialogNode = (\r\n    <div className={`${prefixCls}-wrap`} style={style} ref={dialogRef}>\r\n      <div className={`${prefixCls}-close`} onClick={closeDialog}>\r\n        {closeIcon}\r\n      </div>\r\n      {title && (\r\n        <div className={`${prefixCls}-head`}>\r\n          <div className={`${prefixCls}-title`}>{title}</div>\r\n        </div>\r\n      )}\r\n      <div className={`${prefixCls}-body`}>{children}</div>\r\n      {footer && <div className={`${prefixCls}-foot`}>{footer}</div>}\r\n    </div>\r\n  );\r\n\r\n  useCloseByEsc(() => {\r\n    closeByEsc && onClose?.();\r\n  });\r\n\r\n  const handleMaskClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    console.log(e.target, e.currentTarget);\r\n    mask && e.target === e.currentTarget && closeOnClickMask && onClose?.();\r\n  };\r\n\r\n  return (\r\n    <Portal visible={visible} className={`${prefixCls} ${className || ''}`}>\r\n      {mask && <div className={`${prefixCls}-mask`}></div>}\r\n      <div className={`${prefixCls}-root`} onClick={handleMaskClick}>\r\n        <CSSTransition\r\n          appear\r\n          mountOnEnter\r\n          unmountOnExit\r\n          in={visible}\r\n          timeout={delay}\r\n          classNames={'fade'}\r\n          onEntered={onOpened}\r\n          onExited={onClosed}\r\n          addEndListener={() => {}}\r\n        >\r\n          {dialogNode}\r\n        </CSSTransition>\r\n      </div>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nDialog.defaultProps = {\r\n  visible: false,\r\n  mask: true,\r\n  title: '',\r\n  closeIcon: <i>x</i>,\r\n  closeOnClickMask: false,\r\n  delay: 300,\r\n  closeByEsc: false,\r\n  NoScroll: false,\r\n};\r\n\r\n// Dialog.ConfirmDialog = ConfirmDialog;\r\n\r\nexport default Dialog;",F="import classNames from 'classnames';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { getNodeFromSelector } from './utils';\nexport interface PortalProps {\n  className?: string;\n  style?: React.CSSProperties;\n  container?: Element | string;\n  visible?: boolean;\n  Pref?: any;\n  children?: React.ReactNode;\n}\n\nconst Portal: React.FC<PortalProps> = ({ Pref, ...props }) => {\n  const { container, children, visible, className, style } = props;\n\n  const sourceRef: any = useRef(null);\n\n  const sourceNode = (\n    <div\n      className={`portal-wrapper ${classNames({\n        [className!]: className,\n      })}`}\n      style={style}\n      ref={(el: HTMLDivElement) => {\n        sourceRef.current = el;\n      }}\n    >\n      {children}\n    </div>\n  );\n\n  const portalContainer = getNodeFromSelector(container!);\n\n  useImperativeHandle(Pref, () => ({\n    element: sourceRef.current,\n  }));\n\n  const purePortal = portalContainer\n    ? ReactDOM.createPortal(\n        // Any valid React child: JSX, strings, arrays, etc.\n        sourceNode,\n        // A DOM element\n        portalContainer,\n      )\n    : null;\n\n  return visible ? purePortal : null;\n};\n\nPortal.defaultProps = {\n  container: 'body',\n  visible: false,\n};\n\nexport default Portal;",B='function getNodeFromSelector(selector: string | Element): Element {\r\n    if (selector instanceof Element) {\r\n        return selector\r\n    }\r\n    if (typeof selector === "string") {\r\n        const node = document.querySelector(selector)\r\n        if (node) {\r\n            return node\r\n        }\r\n    }\r\n    throw new Error("Invalid selector")\r\n}\r\n\r\nexport { getNodeFromSelector }',V='import { useEffect } from "react"\r\n\r\nexport default function closeByEsc(closeCallback: (e: KeyboardEvent) => void) {\r\n    function onKeyUp(e: KeyboardEvent) {\r\n        if (e.key === "Escape" || e.key === "Esc" || e.keyCode === 27) {\r\n            closeCallback(e)\r\n        }\r\n    }\r\n    document.body.addEventListener("keyup", onKeyUp)\r\n}\r\n\r\nexport function useCloseByEsc(closeCallback: (e: KeyboardEvent) => void) {\r\n    useEffect(() => {\r\n        function onKeyUp(e: KeyboardEvent) {\r\n            if (e.key === "Escape" || e.key === "Esc" || e.keyCode === 27) {\r\n                closeCallback(e)\r\n            }\r\n        }\r\n        document.body.addEventListener("keyup", onKeyUp)\r\n        return () => {\r\n            document.body.removeEventListener("keyup", onKeyUp)\r\n        }\r\n    }, [])\r\n}',A='import { closeFnSet } from "./open"\r\n\r\nexport const clear = () => {\r\n    closeFnSet.forEach((close) => close())\r\n}',z="import React, { createRef, useImperativeHandle, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dialog from './dialog';\r\nimport { DialogProps } from './interface';\r\n\r\nexport type ControlledDialogRef = {\r\n  closeDialog: () => void;\r\n};\r\n\r\nexport const closeFnSet = new Set<() => void>();\r\n\r\nconst ControlledDialog: React.FC<DialogProps & { Cref: any }> = ({ Cref, ...props }) => {\r\n  const { children, visible, ...otherProps } = props;\r\n  const [realVisible, setRealVisible] = useState<boolean>(visible === true);\r\n\r\n  const handleClose = () => {\r\n    setRealVisible(false);\r\n  };\r\n\r\n  useImperativeHandle(Cref, () => ({\r\n    closeDialog: handleClose,\r\n  }));\r\n\r\n  return (\r\n    <Dialog visible={realVisible} onClose={handleClose} {...otherProps}>\r\n      {children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n//open\u5b9e\u4f8b\u9700\u8981\u8fd4\u56de\u5173\u95ed\u7684\u65b9\u6cd5(\u7ed9\u5916\u90e8\u7ec4\u4ef6\u8c03\u7528)\uff0c\u8c03\u7528open\u65f6\u9ed8\u8ba4\u5f00\u542f\u5f39\u7a97visible\r\nconst open: (openParams: any) => {\r\n  close(): void;\r\n} = (openParams) => {\r\n  const { content, ...props } = openParams;\r\n  const container = document.createElement('div');\r\n\r\n  //\u6b64\u5904\u4e0d\u80fd\u4f7f\u7528hook\uff08useRef\uff09\uff0craect\u4e0d\u53ef\u4ee5\u5728\u975e\u7ec4\u4ef6\u7684\u65b9\u6cd5\u5185\u4f7f\u7528hook\r\n  const ref = createRef<ControlledDialogRef>();\r\n\r\n  const target = (\r\n    <ControlledDialog visible {...props} Cref={ref}>\r\n      {content}\r\n    </ControlledDialog>\r\n  );\r\n\r\n  ReactDOM.render(target, container);\r\n\r\n  const close = () => {\r\n    ref.current?.closeDialog();\r\n  };\r\n\r\n  closeFnSet.add(close);\r\n\r\n  return {\r\n    close() {\r\n      ref.current?.closeDialog();\r\n    },\r\n  };\r\n};\r\n\r\nconst getAlert = (config: any, type: any) => {\r\n  const content = (\r\n    <div className=\"dialog-alert\">\r\n      <i className={`${type}-icon`}>{type}</i>\r\n    </div>\r\n  );\r\n  open({\r\n    ...config,\r\n    footer: false,\r\n    title: false,\r\n    content,\r\n    className: `alert alert-${type}`,\r\n  });\r\n};\r\n\r\nconst alert = {\r\n  info: (config: any) => getAlert(config, 'info'),\r\n  success: (config: any) => getAlert(config, 'success'),\r\n  error: (config: any) => getAlert(config, 'error'),\r\n  warning: (config: any) => getAlert(config, 'warning'),\r\n};\r\n\r\nexport { open, alert };",U="import './index.less';",$='@Prefix: cherry-dialog;\n.@{Prefix} {\n    &-mask {\n        position: fixed;\n        top: 0;\n        right: 0;\n        left: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.6);\n        height: 100%;\n        z-index: 1050;\n    }\n    &.alert{\n        .@{Prefix}-root, .@{Prefix}-wrap{\n            min-width: 260px;\n            min-height: 140px;\n            .@{Prefix}-close{\n                top: 5px;\n                right: 15px;\n            }\n        }\n    }\n\n    &-root {\n        position: fixed;\n        overflow: auto;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1050;\n        outline: 0;\n        text-align: center;\n        font-size: 0;\n        white-space: nowrap;\n        &::before {\n            content: "";\n            height: 100%;\n            display: inline-block;\n            vertical-align: middle;\n        }\n        .@{Prefix}-wrap{\n            background-color: #fff;\n            position: relative;\n            display: inline-block;\n            vertical-align: middle;\n            text-align: initial;\n            border-radius: 4px;\n            padding: 16px 0;\n            box-sizing: border-box;\n            white-space: normal;\n            min-width: 560px;\n            max-width: calc(100vw - 56px);\n            min-height: 190px;\n            max-height: calc(100vh - 112px);\n            .@{Prefix}-close{\n                color: #333;\n                background-color: #fff;\n                position: absolute;\n                display: inline-block;\n                font-size: 20px;\n                line-height: 20px;\n                text-align: right;\n                vertical-align: middle;\n                cursor: pointer;\n                border: 0;\n                outline: none;\n                user-select: none;\n                padding: 0 0 0 6px;\n                margin: 0;\n                top: 18px;\n                right: 16px;\n            }\n            .@{Prefix}-title{\n                font-size: 16px;\n                line-height: 24px;\n                border-bottom-color: #e0e0e0;\n                color: #333;\n                padding: 0 16px 16px;\n                border-bottom-width: 1px;\n                border-bottom-style: solid;\n                margin: 0;\n                box-sizing: border-box;\n                font-weight: 500;\n            }\n            .@{Prefix}-body{\n                font-size: 14px;\n                line-height: 20px;\n                color: #333;\n                padding: 20px;\n            }\n        }\n    }\n    &-bottom {\n        padding: 20px;\n        text-align: right;\n    }\n    .fade-enter {\n    opacity: 0;\n    transform: translateX(100%);\n    }\n\n    .fade-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 500ms;\n    }\n\n    .fade-exit {\n    opacity: 1;\n    transform: translateX(0);\n    }\n\n    .fade-exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: all 500ms;\n    }\n\n}',j=".dialog-example {\n  .cherry-button {\n    margin: 10px 20px 20px 0;\n    svg {\n      vertical-align: middle;\n    }\n  }\n}\n.demo-bottom {\n  padding: 20px;\n  text-align: right;\n}",K='import React, { useEffect, useState } from "react"\r\nimport Form from ".."\r\nimport "../style"\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <Form/>\r\n        </>\r\n    )\r\n}',G="import Form from './form';\nexport type { FormProps } from './interface';\nexport default Form;",J='import React from "react"\r\nimport classNames from "classnames"\r\nimport { FormProps } from "./interface"\r\nimport { ConfigContext } from "../common-provider/context"\r\nconst ForwardForm: React.ForwardRefRenderFunction<unknown, FormProps> = (\r\n    { prefixCls: customizePrefixCls, ...props },\r\n    ref\r\n) => {\r\n    const { style, className } = props\r\n    const { getPrefixCls } = React.useContext(ConfigContext)\r\n    const prefixCls = getPrefixCls("form", customizePrefixCls)\r\n\r\n    React.useImperativeHandle(ref, () => ({}))\r\n\r\n    return (\r\n        <div className={`${prefixCls} ${className || ""}`} style={style}></div>\r\n    )\r\n}\r\n\r\nconst Form = React.forwardRef<unknown, FormProps>(ForwardForm)\r\n\r\nForm.defaultProps = {}\r\n\r\nexport default Form',q="import './index.less';",_="@Prefix: cherry-form;\n.@{Prefix} {\n}",W="import React,{ useEffect,useState } from 'react';\nimport Input,{ InputNumber } from '..';\nimport ConfigProvider from '../../common-provider/context';\nimport { SuccessIcon } from '../../icon';\n// import InputNumber from '../inputNumber'\nimport '../style';\nimport './index.less';\n// const { InputNumber } = Input\nexport default () => {\n  const inputRef = React.createRef<any>();\n  useEffect(() => {\n    console.log(inputRef);\n  }, []);\n  const handleChange = (e: any, val: any) => {\n    console.log(e, val);\n    setValue(val);\n  };\n  const handleNumberChange = (val: any) => {\n    console.log(val);\n    setNumberValue(val);\n  };\n  const [value, setValue] = useState('');\n  const [numberValue, setNumberValue] = useState(0);\n  return (\n    <>\n      <Input\n        onChange={handleChange}\n        onPressEnter={() => {\n          console.log('onPressEnter');\n        }}\n        onKeyDown={() => {\n          console.log('onKeyDown');\n        }}\n        defaultValue={'github.com/nywgithub/components'}\n        addonBefore={<span>https://</span>}\n        addonAfter={<span>.com</span>}\n        prefix={<SuccessIcon />}\n        allowClear\n        value={value}\n      ></Input>\n      <ConfigProvider locale={'test'}>\n        <InputNumber\n          ref={inputRef}\n          min={0}\n          max={10000000}\n          addonBefore={<span style={{ marginRight: 10 }}>\u6570\u91cf:</span>}\n          addonAfter={<span style={{ marginLeft: 10 }}>\u4e2a(\u5355\u4f4d)</span>}\n          onChange={handleNumberChange}\n          defaultValue={1}\n          value={numberValue}\n        />\n      </ConfigProvider>\n    </>\n  );\n};",X="/*\n * @Author: niyongwei\n * @Date: 2022-03-24 15:39:29\n * @LastEditors: niyongwei\n * @LastEditTime: 2022-04-06 20:21:01\n * @FilePath: \\components\\src\\input\\index.tsx\n * @Description:\n *\n * Copyright (c) 2022 by nyw, All Rights Reserved.\n */\n\nimport type { InputProps } from './input';\nimport Input from './input';\nimport type { InputNumberProps } from './inputNumber';\nimport InputNumber from './inputNumber';\n\nexport default Input;\nexport { InputNumber, InputProps, InputNumberProps };\n\n// Input.InputNumber = InputNumber;",Y="import omit from 'rc-util/lib/omit';\nimport React, { useState } from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport BasicInput from './BasicInput';\n//\u8054\u5408\u7c7b\u578b\uff1a\u628a\u4e24\u4e2a\u5b58\u5728\u5e76\u96c6\u7684\u7c7b\u578b\uff0c\u62c6\u5f00\u4e3a\u8054\u5408\u7c7b\u578b\ntype LiteralUnion<T extends U, U> = T | (U & {});\n//\u7ee7\u627f\u539f\u751finput\u7684\u5c5e\u6027\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'prefix' | 'type' | 'onChange'> {\n  prefixCls?: string;\n  // ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#%3Cinput%3E_types\n  type?: LiteralUnion<\n    | 'button'\n    | 'checkbox'\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'image'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'radio'\n    | 'range'\n    | 'reset'\n    | 'search'\n    | 'submit'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week',\n    string\n  >;\n  onPressEnter?: React.KeyboardEventHandler<HTMLInputElement>;\n  addonBefore?: React.ReactNode;\n  addonAfter?: React.ReactNode;\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n  allowClear?: boolean;\n  bordered?: boolean;\n  htmlSize?: number;\n  onChange?: (e: any, val: any) => void;\n}\n\nconst ForwardInput: React.ForwardRefRenderFunction<unknown, InputProps> = (\n  { prefixCls: customizePrefixCls, ...props },\n  ref,\n) => {\n  const otherProps = omit(props as InputProps, [\n    'prefixCls',\n    'onPressEnter',\n    'addonBefore',\n    'addonAfter',\n    'prefix',\n    'suffix',\n    'allowClear',\n    // Input elements must be either controlled or uncontrolled,\n    // specify either the value prop, or the defaultValue prop, but not both.\n    'defaultValue',\n    'size',\n    'bordered',\n    'htmlSize',\n    'onChange',\n  ]);\n  //input\u8f93\u5165\u6846\u7684\u503c\n  const [value, setValue] = useState<any>(props?.defaultValue || props?.value);\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('input', customizePrefixCls);\n  //\u6309\u4e0b\u952e\u76d8\u6309\u952e\u4e8b\u4ef6\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    // console.log(e)\n    //keyCode\u5df2\u5f03\u7528\n    if (props.onPressEnter && e.key === 'Enter') {\n      props.onPressEnter(e);\n    }\n    //\u6b64\u5904\u4e3a\u539f\u751f\u7684\u4e8b\u4ef6\n    props.onKeyDown?.(e);\n  };\n  //\u8f93\u5165\u76d1\u542c\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    props.onChange?.(e, e.target.value);\n  };\n  //\u6e05\u9664\u8f93\u5165\u503c\n  const handleClear = () => {\n    setValue('');\n  };\n  return (\n    <BasicInput\n      prefixCls={prefixCls}\n      type={'input'}\n      {...props}\n      handleClear={handleClear}\n      element={\n        <input\n          {...otherProps}\n          //\u6309\u4e0b\u952e\u76d8\u6309\u952e\u4e8b\u4ef6\n          onKeyDown={handleKeyDown}\n          onChange={handleChange}\n          value={value}\n          // ref={ref}\n        />\n      }\n    />\n  );\n};\nconst Input = React.forwardRef<unknown, InputProps>(ForwardInput);\nexport default Input;",Z="import cls from 'classnames';\nimport * as React from 'react';\nimport { CloseIcon } from '../icon';\n\ninterface BasicInputProps {\n  suffix?: React.ReactNode;\n  prefix?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n  addonAfter?: React.ReactNode;\n  allowClear?: boolean;\n  prefixCls: string;\n  element: React.ReactElement;\n  type: string;\n  handleClear: any;\n}\n\nconst BasicInput: React.FC<BasicInputProps> = (props) => {\n  const {\n    allowClear,\n    prefixCls,\n    prefix,\n    suffix,\n    addonBefore,\n    addonAfter,\n    element,\n    type,\n    handleClear,\n  } = props;\n\n  const renderClearIcon = (prefixCls: string) => {\n    if (!allowClear) {\n      return null;\n    }\n    const className = `${prefixCls}-clear-icon`;\n    // TODO:\u6362\u6210icon\u56fe\u6807\n    return (\n      <span className={className} onClick={handleClear}>\n        <CloseIcon />\n      </span>\n    );\n  };\n  //\u533a\u5206textarea \u548c \u666e\u901ainput\u6846\n  const renderTetxArea = (prefixCls: string, element: React.ReactElement) => {\n    return (\n      <span className={`${prefixCls}-wrapper`}>\n        {React.cloneElement(element)}\n        {/* \u6e05\u9664\u6309\u94ae */}\n        {renderClearIcon('textarea')}\n      </span>\n    );\n  };\n\n  const renderLabelNode = (\n    prefixCls: string,\n    nodetype: 'suffix' | 'prefix' | 'addonBefore' | 'addonAfter',\n  ) => {\n    const obj = {\n      suffix,\n      prefix,\n      addonBefore,\n      addonAfter,\n    };\n    return obj[nodetype] ? (\n      <span\n        className={`${prefixCls}-${nodetype} ${\n          nodetype.indexOf('addon') !== -1\n            ? `${prefixCls}-addon`\n            : nodetype.indexOf('fix') !== -1\n            ? `${prefixCls}-fix`\n            : ''\n        }`}\n      >\n        {obj[nodetype]}\n      </span>\n    ) : allowClear ? (\n      <span className={`${prefixCls}-suffix ${prefixCls}-fix`}>\n        {/* \u6e05\u9664\u6309\u94ae */}\n        {type !== 'textarea' ? renderClearIcon(prefixCls) : null}\n      </span>\n    ) : null;\n  };\n\n  const renderInput = (prefixCls: string, element: React.ReactElement) => {\n    return (\n      <span className={`${prefixCls}-wrapper`}>\n        {renderLabelNode(prefixCls, 'addonBefore')}\n        <span\n          className={cls(prefixCls + '-group', {\n            [`${prefixCls}-has-prefix`]: prefix,\n            [`${prefixCls}-has-suffix`]: suffix,\n          })}\n        >\n          {renderLabelNode(prefixCls, 'prefix')}\n          {React.cloneElement(element, { className: prefixCls })}\n          {renderLabelNode(prefixCls, 'suffix')}\n        </span>\n        {renderLabelNode(prefixCls, 'addonAfter')}\n      </span>\n    );\n  };\n\n  return type === 'textarea' ? renderTetxArea(prefixCls, element) : renderInput(prefixCls, element);\n};\n\nexport default BasicInput;",Q='import React from "react"\r\nimport "./style"\r\nimport RcInputNumber, {\r\n    InputNumberProps as RcInputNumberProps,\r\n} from "rc-input-number"\r\n//\u516c\u5171context\u4e2d\u89c4\u8303\u6837\u5f0f\u540d\u7684\u65b9\u6cd5\r\nimport { ConfigContext } from "../common-provider/context"\r\n//\u7ee7\u627frc-input-number\u7684\u5c5e\u6027\r\nexport interface InputNumberProps extends RcInputNumberProps {\r\n    prefixCls?: string\r\n    addonBefore?: React.ReactNode\r\n    addonAfter?: React.ReactNode\r\n}\r\n\r\n//\u8f6c\u53d1\u539f\u751finput\u7684ref,\u5728\u4f7f\u7528\u7ec4\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u83b7\u53d6\u539f\u751finput\u7684ref\r\nconst InputNumber = React.forwardRef<HTMLInputElement, InputNumberProps>(\r\n    //\u89e3\u6784\u6539\u53d8prefixCls\u540d\u79f0(\u907f\u514d\u91cd\u540d)\r\n    ({ prefixCls: customizePrefixCls, ...props }, ref) => {\r\n        const { addonBefore, addonAfter } = props\r\n        //\u83b7\u53d6context\u4e2d\u7684getPrefixCls\r\n        const { getPrefixCls, locale } = React.useContext(ConfigContext)\r\n        console.log("locale", locale)\r\n        // prefixCls\u4e3a\u7edf\u4e00\u524d\u7f00(ui\u5e93\u540d\u79f0-\u7ec4\u4ef6\u540d\u79f0)\r\n        const prefixCls = getPrefixCls("input-number", customizePrefixCls)\r\n        const addonBeforeNode = addonBefore ? (\r\n            <span className={`${prefixCls}-addbe`}>{addonBefore}</span>\r\n        ) : null\r\n        const addonAfterNode = addonAfter ? (\r\n            <span className={`${prefixCls}-addaf`}>{addonAfter}</span>\r\n        ) : null\r\n        return (\r\n            <div className={prefixCls}>\r\n                {addonBeforeNode}\r\n                <RcInputNumber ref={ref} {...props} />\r\n                {addonAfterNode}\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nexport default InputNumber',ee="import './index.less'\nimport 'rc-input-number/assets/index.css'",ne="@import '../../styles/vars.less';\n@import '../../styles/mixins.less';\n\n@Prefix: cherry-input;\n.@{Prefix} {\n  position: relative;\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  height: @input-height;\n  margin: 0;\n  padding: @input-padding;\n  color: @font-color;\n  font-size: @font-size;\n  font-variant: tabular-nums;\n  line-height: 1.5;\n  list-style: none;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid @border-color;\n  border-radius: @border-radius;\n  outline: none;\n  transition: all @animate-time;\n  &:active,\n  &:hover,\n  &:focus {\n    border-color: @primary-color;\n    outline: none;\n    box-shadow: @input-box-shadow;\n  }\n  &-wrapper {\n    vertical-align: middle;\n    .flex-center(space-around);\n    .@{Prefix}-group {\n      flex: 1 1 auto;\n      width: 100%;\n      margin-bottom: 0;\n      border-radius: 0;\n    }\n  }\n  &-addon {\n    position: relative;\n    height: @input-height;\n    padding: @input-padding;\n    color: rgba(0, 0, 0, 0.65);\n    font-weight: normal;\n    font-size: @font-size;\n    line-height: @input-height;\n    text-align: center;\n    background-color: @bg-color;\n    border: 1px solid @border-color;\n    border-radius: @border-radius;\n    transition: all @loading-time;\n    .flex-center();\n\n    &.@{Prefix}-addonBefore {\n      border-right: none;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    &.@{Prefix}-addonAfter {\n      border-left: none;\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n  &-group {\n    position: relative;\n\n    .@{Prefix}-clear-icon {\n      opacity: 0.5;\n      transition: @default-transition;\n      &:hover {\n        opacity: 0.7;\n      }\n    }\n    &.@{Prefix}-has-prefix {\n      .@{Prefix} {\n        padding-left: @input-prefix-offset + 20px;\n      }\n    }\n    &.@{Prefix}-has-suffix {\n      .@{Prefix} {\n        padding-right: @input-prefix-offset + 20px;\n      }\n    }\n  }\n  &-prefix,\n  &-suffix {\n    position: absolute;\n    top: 50%;\n    z-index: 1;\n    transform: translateY(-50%);\n    cursor: pointer;\n    .flex-center();\n    &,\n    svg {\n      color: @disabled-font-color;\n      font-size: @font-size;\n    }\n  }\n\n  &-prefix {\n    left: @input-prefix-offset;\n  }\n\n  &-suffix {\n    right: @input-suffix-offset;\n  }\n\n  &-clear-icon {\n    color: @font-color !important;\n    animation: cuke-zoom-in @default-transition forwards;\n  }\n}",te=".cherry-input-number {\n  margin-top: 30px;\n}",re="import React from 'react';\r\nimport Pagination from '..';\r\nimport '../style';\r\n\r\nexport default () => {\r\n  const handleChangeSimple = (val: any) => {\r\n    console.log('handleChangeSimple', val);\r\n  };\r\n  const handleChangeDefault = (val: any) => {\r\n    console.log('handleChangeDefault', val);\r\n  };\r\n\r\n  const handleJumpChange = (val: any) => {\r\n    console.log('handleJumpChange', val);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination\r\n        type=\"simple\"\r\n        total={35}\r\n        showJumpInput\r\n        onChange={handleChangeSimple}\r\n        onJumpChange={handleJumpChange}\r\n        style={{ margin: 10 }}\r\n      />\r\n      <Pagination\r\n        total={31}\r\n        showJumpInput\r\n        showTotal\r\n        showSizerSelect\r\n        onChange={handleChangeDefault}\r\n        style={{ margin: 10 }}\r\n        // hidePagerNum={3}\r\n        itemRender={{\r\n          prevNode(current) {\r\n            return <div className=\"pager-prev\">\u4e0a\u4e00\u4e2a</div>;\r\n          },\r\n          nextNode(current) {\r\n            return <div className=\"pager-next\">\u4e0b\u4e00\u4e2a</div>;\r\n          },\r\n          totalNode(totalPage) {\r\n            return <div className=\"pager-total\">\u603b\u6570: {totalPage}</div>;\r\n          },\r\n          pagerNode(num) {\r\n            return <div className=\"pager-pager\">{num}</div>;\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};",ie="import Pagination from './pagination';\nexport type { PagerProps } from './interface';\nexport default Pagination;",oe="import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { ConfigContext } from '../common-provider/context';\r\nimport { PagerProps } from './interface';\r\nconst ForwardPagination: React.ForwardRefRenderFunction<unknown, PagerProps> = (\r\n  { prefixCls: customizePrefixCls, ...props },\r\n  ref,\r\n) => {\r\n  const {\r\n    className,\r\n    locale,\r\n    style,\r\n    type,\r\n    total,\r\n    pageNo,\r\n    pageSize,\r\n    showTotal,\r\n    showJumpInput,\r\n    showSizerSelect,\r\n    hidePagerNum,\r\n    itemRender,\r\n    onChange,\r\n    onSizeChange,\r\n    onJumpChange,\r\n    onPrevClick,\r\n    onNextClick,\r\n  } = props;\r\n  const { getPrefixCls } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('pagination', customizePrefixCls);\r\n\r\n  const getTotalPage = (total: number, size: number) => {\r\n    return Math.floor((total - 1) / size) + 1;\r\n  };\r\n\r\n  const totalPage = getTotalPage(total, pageSize!);\r\n\r\n  //\u5f53\u524d\u5b9e\u65f6\u9875\u7801\r\n  const [current, setCurrent] = React.useState<number>(pageNo!);\r\n\r\n  //\u4ec5\u7528\u4e8e\u5c55\u793ajump\u8f93\u5165\u6846\u7684\u503c\r\n  const [currentInput, setCurrentInput] = React.useState<number>(pageNo!);\r\n\r\n  const handleChange = (n: number, callback: (n: number) => void) => {\r\n    if (n < 1) return callback(1);\r\n    if (n > totalPage) return callback(totalPage);\r\n    callback(n);\r\n  };\r\n\r\n  const pagerChange = (n: number) => {\r\n    handleChange(n, (val) => {\r\n      setCurrent(val);\r\n      onChange?.(val);\r\n    });\r\n  };\r\n\r\n  const pagerChange_Input = (n: number) => {\r\n    handleChange(n, (val) => {\r\n      setCurrentInput(val);\r\n      onJumpChange?.(val);\r\n    });\r\n  };\r\n\r\n  const pagerNumCls = `${prefixCls}-paper-number`;\r\n\r\n  const pagerList: Array<React.ReactElement> = [];\r\n\r\n  const renderPager = () => {\r\n    for (let i = 0; i < totalPage; i++) {\r\n      pagerList.push(\r\n        <li\r\n          key={i}\r\n          className={`${prefixCls}-paper-item ${classNames({\r\n            current: current === i + 1,\r\n          })}`}\r\n          onClick={() => pagerChange(i + 1)}\r\n        >\r\n          {itemRender?.pagerNode ? (\r\n            itemRender?.pagerNode(i + 1)\r\n          ) : (\r\n            <div className={pagerNumCls}>{i + 1}</div>\r\n          )}\r\n        </li>,\r\n      );\r\n    }\r\n  };\r\n\r\n  renderPager();\r\n\r\n  const clickPrev = () => {\r\n    pagerChange(current - 1);\r\n    type === 'simple' && pagerChange_Input(current - 1);\r\n    onPrevClick?.(current);\r\n  };\r\n\r\n  const clickNext = () => {\r\n    pagerChange(current + 1);\r\n    type === 'simple' && pagerChange_Input(current + 1);\r\n    onNextClick?.(current);\r\n  };\r\n\r\n  const inputRef = React.useRef(null);\r\n\r\n  const handleKeyDown = (e: any) => {\r\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      pagerChange(currentInput);\r\n      onJumpChange?.(currentInput);\r\n    }\r\n    if (e.key === 'ArrowUp') {\r\n      pagerChange_Input(current + 1);\r\n    }\r\n\r\n    if (e.key === 'ArrowDown') {\r\n      pagerChange_Input(current - 1);\r\n    }\r\n\r\n    if (!isNaN(Number(e.key))) {\r\n      pagerChange_Input(Number(e.key));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: any) => {\r\n    const value = e.target.value;\r\n    if (!isNaN(Number(value))) {\r\n      setCurrentInput(value);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e: any) => {\r\n    if (!currentInput) {\r\n      return setCurrentInput(current);\r\n    }\r\n    pagerChange(currentInput);\r\n    onJumpChange?.(currentInput);\r\n  };\r\n\r\n  const inputJumper = (\r\n    <input\r\n      className={`${prefixCls}-input`}\r\n      type=\"text\"\r\n      value={currentInput}\r\n      onKeyDown={handleKeyDown}\r\n      onKeyUp={handleKeyUp}\r\n      onChange={handleInputChange}\r\n      onBlur={handleBlur}\r\n      size={3}\r\n    />\r\n  );\r\n\r\n  const prevDom = (\r\n    <div\r\n      className={classNames(`${prefixCls}-paper-prev`, {\r\n        [`${prefixCls}-disabled`]: current === 1,\r\n      })}\r\n      onClick={() => clickPrev()}\r\n    >\r\n      {itemRender?.prevNode ? itemRender?.prevNode(current) : 'prev'}\r\n    </div>\r\n  );\r\n  const nextDom = (\r\n    <div\r\n      className={classNames(`${prefixCls}-paper-next`, {\r\n        [`${prefixCls}-disabled`]: current === totalPage,\r\n      })}\r\n      onClick={() => clickNext()}\r\n    >\r\n      {itemRender?.nextNode ? itemRender?.nextNode(current) : 'next'}\r\n    </div>\r\n  );\r\n\r\n  const Total = (\r\n    <div className={`${prefixCls}-total-container`}>\r\n      {itemRender?.totalNode ? itemRender?.totalNode(totalPage) : `Total: ${totalPage}`}\r\n    </div>\r\n  );\r\n  const Jumper = <div className={`${prefixCls}-jump-container`}>Go to {inputJumper}</div>;\r\n  const Sizer = <div className={`${prefixCls}-size-container`}></div>;\r\n\r\n  const simplePager = (\r\n    <>\r\n      {prevDom}\r\n      <div className={pagerNumCls}>{showJumpInput ? inputJumper : current}</div>\r\n      <span className={`${prefixCls}-slash`}>/</span>\r\n      <div className={pagerNumCls}>{totalPage}</div>\r\n      {nextDom}\r\n    </>\r\n  );\r\n\r\n  const defaultPager = (\r\n    <>\r\n      {showTotal ? Total : null}\r\n      <div className={`${prefixCls}-paper-container`}>\r\n        {prevDom}\r\n        {pagerList}\r\n        {nextDom}\r\n      </div>\r\n      {showJumpInput ? Jumper : null}\r\n      {showSizerSelect ? Sizer : null}\r\n    </>\r\n  );\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    current,\r\n    inputRef,\r\n    clickNext,\r\n    clickPrev,\r\n  }));\r\n\r\n  return (hidePagerNum || 0) < totalPage ? (\r\n    <div\r\n      className={`${prefixCls} ${className || ''} ${classNames({\r\n        simple: type === 'simple',\r\n      })}`}\r\n      style={style}\r\n    >\r\n      {type === 'default' ? defaultPager : null}\r\n      {type === 'simple' ? simplePager : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst Pagination = React.forwardRef<unknown, PagerProps>(ForwardPagination);\r\n\r\nPagination.defaultProps = {\r\n  pageNo: 1,\r\n  pageSize: 10,\r\n  type: 'default',\r\n};\r\n\r\nexport default Pagination;",ae="import './index.less';",le="@pagerPrefix: cherry-pagination;\n@margin: 15px;\n\n.@{pagerPrefix} {\n    display: flex;\n    align-items: center;\n    &-disabled{\n        cursor: not-allowed;\n        color: #888;\n    }\n    &-total-container {\n        margin-right: @margin;\n    }\n    &-paper-container {\n        display: flex;\n        align-items: center;\n    }\n    &-paper-item {\n        display: inline-block;\n        min-width: 28px;\n        height: 28px;\n        margin-right: 8px;\n        font-family: Arial;\n        line-height: 26px;\n        text-align: center;\n        vertical-align: middle;\n        list-style: none;\n        background-color: #fff;\n        border: 1px solid #d9d9d9;\n        border-radius: 2px;\n        outline: 0;\n        cursor: pointer;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        color: #222;\n        &.current {\n            border: 1px solid red;\n            color: red;\n        }\n    }\n    &-jump-container {\n        margin-right: @margin;\n    }\n    &-size-container {\n        margin-right: @margin;\n    }\n    &-paper-next,\n    &-paper-prev {\n        cursor: pointer;\n        margin-right: @margin;\n        &.@{pagerPrefix}-disabled{\n            cursor: not-allowed;\n        }\n    }\n    &.simple {\n        .@{pagerPrefix}-paper-number{\n            margin-right: @margin;\n        }\n    }\n\n    &-input{\n        border-radius: 2px;\n        outline: none;\n        text-align: center;\n    }\n\n    &-slash{\n        margin-right: @margin;\n    }\n}",se="import React, { useRef, useState } from 'react';\nimport PopOver from '..';\nimport Button from '../../button';\nimport Input from '../../input';\nimport '../style';\nimport './index.less';\n\nexport default () => {\n  const handelClose = () => {\n    console.log('close');\n  };\n\n  const triggerEvent = {\n    onClick() {\n      console.log('click');\n    },\n  };\n\n  const [visible, setVisible] = useState(false);\n\n  const onVisibleChange = (val: boolean) => {\n    console.log('visible', val);\n  };\n\n  const popRef: any = useRef(null);\n\n  const closePop = () => {\n    popRef.current?.close();\n  };\n\n  return (\n    <>\n      <PopOver\n        ref={popRef}\n        target={<Button>\u70b9\u51fb\u89e6\u53d1</Button>}\n        triggerEvent={triggerEvent}\n        trigger=\"click\"\n        onClose={handelClose}\n        visible={visible}\n        onVisibleChange={onVisibleChange}\n      >\n        <div className=\"main\">\n          \u8fd9\u91cc\u662f\u5f39\u51fa\u5c42\u5185\u5bb9 <span onClick={closePop}>x</span>\n        </div>\n      </PopOver>\n      <PopOver\n        ref={popRef}\n        target={<Button>\u60ac\u6d6e\u89e6\u53d1</Button>}\n        triggerEvent={triggerEvent}\n        trigger=\"hover\"\n        onClose={handelClose}\n        visible={visible}\n        onVisibleChange={onVisibleChange}\n      >\n        <div className=\"main\">\n          \u8fd9\u91cc\u662f\u5f39\u51fa\u5c42\u5185\u5bb9 <span onClick={closePop}>x</span>\n        </div>\n      </PopOver>\n      <PopOver\n        ref={popRef}\n        target={<Input placeholder=\"\u805a\u7126\u89e6\u53d1\" />}\n        triggerEvent={triggerEvent}\n        trigger=\"focus\"\n        onClose={handelClose}\n        visible={visible}\n        onVisibleChange={onVisibleChange}\n      >\n        <div className=\"main\">\n          \u8fd9\u91cc\u662f\u5f39\u51fa\u5c42\u5185\u5bb9 <span onClick={closePop}>x</span>\n        </div>\n      </PopOver>\n    </>\n  );\n};",pe="import PopOver from './popover';\nexport type { PopOverProps } from './interface';\nexport default PopOver;",de="import { useClickAway } from 'ahooks';\r\nimport domAlign from 'dom-align';\r\nimport React, { useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ConfigContext } from '../common-provider/context';\r\nimport { useCloseByEsc } from '../util/closeByEsc';\r\nimport { PopOverProps } from './interface';\r\nimport Portal from './portal';\r\nimport Trigger from './trigger';\r\n\r\nconst ForwardPopOver: React.ForwardRefRenderFunction<unknown, PopOverProps> = (\r\n  { prefixCls: customizePrefixCls, ...props },\r\n  ref,\r\n) => {\r\n  const {\r\n    style,\r\n    className,\r\n    closeByEsc,\r\n    onClose,\r\n    container,\r\n    trigger,\r\n    triggerEvent,\r\n    target,\r\n    alignConfig,\r\n    visible,\r\n    onVisibleChange,\r\n    closeOnClickOutside,\r\n  } = props;\r\n  const { getPrefixCls } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('popover', customizePrefixCls);\r\n\r\n  const [popVisible, setPopVisible] = useState<boolean>(visible === true);\r\n\r\n  const handleVisible = (val: any) => {\r\n    setPopVisible(val);\r\n    onVisibleChange?.(val);\r\n  };\r\n\r\n  useCloseByEsc((e) => {\r\n    handleVisible(false);\r\n    onClose!(e);\r\n  });\r\n\r\n  const portalRef = useRef(null);\r\n  const triggerRef = useRef(null);\r\n\r\n  useClickAway(() => {\r\n    closeOnClickOutside && handleVisible(false);\r\n  }, [triggerRef, portalRef]);\r\n\r\n  const align = () => {\r\n    console.log('align', portalRef.current, triggerRef.current);\r\n    portalRef.current &&\r\n      triggerRef.current &&\r\n      domAlign(portalRef.current, triggerRef.current, alignConfig);\r\n  };\r\n\r\n  useEffect(() => {\r\n    popVisible && align();\r\n  }, [popVisible]);\r\n\r\n  const cancelAlign = () => {\r\n    handleVisible(false);\r\n  };\r\n\r\n  let popTriggerEvent: any = {};\r\n\r\n  if (trigger === 'click') {\r\n    popTriggerEvent['onClick'] = function () {\r\n      handleVisible(true);\r\n      triggerEvent['onClick']?.();\r\n    };\r\n  } else if (trigger === 'hover') {\r\n    popTriggerEvent['onMouseEnter'] = function () {\r\n      handleVisible(true);\r\n      triggerEvent['onMouseEnter']?.();\r\n    };\r\n\r\n    popTriggerEvent['onMouseLeave'] = function () {\r\n      cancelAlign();\r\n      triggerEvent['onMouseLeave']?.();\r\n    };\r\n  } else if (trigger === 'focus') {\r\n    popTriggerEvent['onFocus'] = function () {\r\n      handleVisible(true);\r\n      triggerEvent['onFocus']?.();\r\n    };\r\n    popTriggerEvent['onBlur'] = function () {\r\n      cancelAlign();\r\n      triggerEvent['onBlur']?.();\r\n    };\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    close: () => {\r\n      handleVisible(false);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Trigger\r\n        trigger={trigger}\r\n        triggerEvent={popTriggerEvent}\r\n        Tref={(ref: any) => {\r\n          console.log(ref);\r\n          triggerRef.current = ref?.element?.current;\r\n        }}\r\n      >\r\n        <div className={`${prefixCls}-target`}>{target}</div>\r\n      </Trigger>\r\n      <Portal\r\n        container={container}\r\n        className={`${prefixCls}-portal`}\r\n        visible={popVisible}\r\n        Pref={(ref: any) => {\r\n          console.log(ref);\r\n          portalRef.current = ref?.element;\r\n        }}\r\n      >\r\n        <div className={`${prefixCls}-content`}>{props.children}</div>\r\n      </Portal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PopOver = React.forwardRef<unknown, PopOverProps>(ForwardPopOver);\r\n\r\nPopOver.defaultProps = {\r\n  visible: false,\r\n  alignConfig: {\r\n    points: ['bl', 'tl'],\r\n    offset: [0, 0],\r\n    targetOffset: [0, 0],\r\n    overflow: { adjustX: true, adjustY: true },\r\n  },\r\n  closeByEsc: true,\r\n  container: 'body',\r\n  trigger: 'hover',\r\n  closeOnClickOutside: true,\r\n};\r\n\r\nexport default PopOver;",ce="import React, { cloneElement, useImperativeHandle } from 'react';\nimport { isElement, isFragment } from 'react-is';\n\nexport interface TriggerProps {\n  trigger?: 'click' | 'focus' | 'hover';\n  triggerEvent?: any;\n  Tref: any;\n  children?: React.ReactNode;\n}\n\nconst Trigger: React.FC<TriggerProps> = ({ Tref, ...props }) => {\n  const { children, trigger, triggerEvent } = props;\n\n  let childrenNode: React.ReactNode;\n\n  const ref = React.useRef(null);\n\n  useImperativeHandle(Tref, () => ({\n    element: ref,\n  }));\n\n  if (isElement(children) && !isFragment(children)) {\n    childrenNode = cloneElement(\n      children as React.FunctionComponentElement<{\n        ref: React.MutableRefObject<null>;\n      }>,\n      triggerEvent,\n    );\n  }\n\n  return (\n    <div className=\"trigger-wrapper\" ref={ref}>\n      {childrenNode}\n    </div>\n  );\n};\n\nexport default Trigger;",ue="import './index.less';",fe=".trigger-wrapper {\n  margin-bottom: 30px;\n}",me="import 'rc-rate/assets/index.css';\nimport React, { useState } from 'react';\nimport Rate from '..';\nimport '../style';\nimport './basic.less';\n\nexport default () => {\n  const list = ['Responsiveness', 'Customer Service', 'Items As Described', 'Delivery Time'];\n  const handleClickSpecial = () => {};\n  const [defaultValue, setDefaultValue] = useState([0, 0, 1, 1]);\n  return (\n    <>\n      <Rate />\n      {/* {list.map((item, index) => (\n        <div key={index} className=\"finger-wrap\">\n          <span>{item}</span>\n          <FingerRate\n            defaultValue={defaultValue[index]}\n            onClick={handleClickSpecial}\n            character={[\n              <span className=\"ob-icon icon-thumb-up-review\">+</span>,\n              <span className=\"ob-icon icon-thumb-down-review\">-</span>,\n            ]}\n          ></FingerRate>\n        </div>\n      ))}\n      <div className=\"finger-wrap special\" style={{ marginTop: 10 }}>\n        <span>SPECIAL</span>\n        <FingerRate\n          defaultValue={0}\n          character={[\n            <span className=\"ob-icon icon-thumb-up-review\">yes</span>,\n            <span className=\"ob-icon icon-thumb-down-review\">no</span>,\n            <span className=\"ob-icon icon-thumb-down-review\">any</span>,\n          ]}\n          onClick={handleClickSpecial}\n        ></FingerRate>\n      </div> */}\n    </>\n  );\n};",ye="import FingerRate from './FingerRate';\r\nimport Rate from './rate';\r\nexport { RateProps } from './interface';\r\nexport { FingerRate };\r\n\r\nexport default Rate;",ge="import React, { useState } from 'react';\nexport interface FingerRateProps {\n  character?: Array<React.ReactNode | ((props: FingerRateProps) => React.ReactNode) | string>;\n  className?: string;\n  style?: React.CSSProperties;\n  defaultValue?: number;\n  disabled?: boolean;\n  onClick?: (\n    e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>,\n    value?: boolean,\n    key?: number,\n  ) => void;\n  children?: React.ReactNode;\n}\nconst reverse = (num: number | undefined) => {\n  if (num === 0 || num === 1) {\n    return ~num + 2;\n  } else {\n    return 99;\n  }\n};\n\nconst FingerRate: React.FC<FingerRateProps> = (props) => {\n  const { character, className, disabled, onClick, defaultValue } = props;\n  const [currentKey, setCurrentKey] = useState(defaultValue);\n  let characters: Array<React.ReactNode> = [];\n\n  const getCurrentList = () => {\n    let initList = character!.map((e) => {\n      const obj = { el: e, value: false };\n\n      if (reverse(defaultValue)) {\n        obj.value = true;\n      }\n      return obj;\n    });\n    return initList;\n  };\n\n  const [currentList, setCurrentList] = useState(getCurrentList());\n\n  const calcClassName = function (key: number): string {\n    // console.log('key === currentKey', key, currentKey)\n    var cl = '';\n    if (key === 0) {\n      cl = 'finger-icon-up';\n    } else if (key === 1) {\n      cl = 'finger-icon-down';\n    }\n    if (disabled) {\n      if (key === reverse(currentKey)) {\n        return `finger-icon-area ${cl}`;\n      } else {\n        return `finger-icon-area ${cl}`;\n      }\n    } else {\n      if (key === reverse(currentKey) && currentList[key]['value']) {\n        return `finger-icon-area selected ${cl}`;\n      } else {\n        return `finger-icon-area ${cl}`;\n      }\n    }\n  };\n  const clickEvent = (e: any, key: number) => {\n    e.preventDefault();\n    setCurrentKey(reverse(key));\n    var real = currentList;\n    real[key]['value'] = !real[key]['value'];\n    real[reverse(key)] && (real[reverse(key)]['value'] = false);\n    setCurrentList(real);\n    /* let cloneCurrentList = [...currentList]\n        if(){\n\n        } */\n\n    onClick && onClick(e, real[key]['value'], key);\n  };\n  const characterItem = (key: number) => {\n    return (\n      <span\n        key={key}\n        onClick={(e) => {\n          disabled ? null : clickEvent(e, key);\n        }}\n        className={`${calcClassName(key)}`}\n      >\n        {currentList![key]['el']}\n      </span>\n    );\n  };\n  for (let index = 0; index < currentList!.length; index += 1) {\n    if (disabled) {\n      index === reverse(defaultValue) && characters.push(characterItem(index));\n    } else {\n      characters.push(characterItem(index));\n    }\n  }\n  return <div className={`product-finger-lv ${className}`}>{characters}</div>;\n};\nFingerRate.defaultProps = {\n  disabled: false,\n  character: [\n    <i className=\"ob-icon icon-thumb-up-review\">+</i>,\n    <i className=\"ob-icon icon-thumb-down-review\">-</i>,\n  ],\n  className: 'fingerRate',\n};\nexport default FingerRate;",he="import RcRate from 'rc-rate';\nimport React from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport { RateProps } from './interface';\nconst Rate: React.FC<RateProps> = ({ prefixCls: customizePrefixCls, ...props }) => {\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('rate', customizePrefixCls);\n\n  return <RcRate prefixCls={prefixCls} {...props} />;\n};\n\nRate.defaultProps = {\n  count: 5,\n  defaultValue: 5,\n};\n\nexport default Rate;",ve="export interface RateProps {\n  prefixCls?: string;\n  style?: React.CSSProperties;\n  className?: string;\n  character?: React.ReactNode;\n  count?: number;\n  value?: number;\n  defaultValue?: number;\n  allowHalf?: boolean;\n  allowClear?: boolean;\n  disabled?: boolean;\n  onChange?: (value: number) => void;\n  onHoverChange?: (value: number) => void;\n  children?: React.ReactNode;\n}",be="import './index.less';",Ce="@import '../../styles/vars.less';\n\n@Prefix: cherry-rate;\n.@{Prefix} {\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  color: @rate-star-color;\n  font-size: @rate-star-size;\n  line-height: unset;\n  list-style: none;\n  outline: none;\n\n  &-disabled &-star {\n    cursor: default;\n\n    &:hover {\n      transform: scale(1);\n    }\n  }\n\n  &-star {\n    position: relative;\n    display: inline-block;\n    color: inherit;\n    cursor: pointer;\n\n    &:not(:last-child) {\n      margin-right: 8px;\n    }\n\n    > div {\n      transition: all 0.3s, outline 0s;\n\n      &:hover,\n      &:focus-visible {\n        transform: @rate-star-hover-scale;\n      }\n\n      &:focus {\n        outline: 0;\n      }\n\n      &:focus-visible {\n        outline: 1px dashed @rate-star-color;\n      }\n    }\n\n    &-first,\n    &-second {\n      color: @rate-star-bg;\n      transition: all 0.3s;\n      user-select: none;\n    }\n\n    &-first {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 50%;\n      height: 100%;\n      overflow: hidden;\n      opacity: 0;\n    }\n\n    &-half &-first,\n    &-half &-second {\n      opacity: 1;\n    }\n\n    &-half &-first,\n    &-full &-second {\n      color: inherit;\n    }\n  }\n\n  &-text {\n    display: inline-block;\n    margin: 0 8px;\n    font-size: @font-size;\n  }\n}",xe=".finger-wrap {\r\n    width: 70%;\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .finger-icon-area {\r\n        margin-right: 5px;\r\n        background: azure;\r\n        padding: 5px;\r\n        cursor: pointer;\r\n    }\r\n}",Ee='import React, { useRef, useState } from \'react\';\r\nimport Select, { OptGroup, Option } from \'..\';\r\nimport Picker from \'../Picker\';\r\nimport \'../style\';\r\n\r\n// const { Option, OptGroup } = Select\r\n// const {Option} = Select\r\n\r\n/*\r\n    TODO:\r\n    1. picker\u7684children\u5904\u7406(\u53ef\u4ee5\u4f20\u4e0d\u53d7\u9650\u5236\u7684ReactNode)\uff0c Select\u7684children\uff08\u9650\u5236OptGroup\u548cOption\uff09\r\n    2. portals\r\n    3. dom-align(1.\u83b7\u53d6dropDdown\u7684ref 2.\u89e3\u51b3DOMAlign\u8fd4\u56de\u521d\u59cb\u72b6\u6001\u7684\u95ee\u9898 3.domAlign\u7684\u89e6\u53d1\u65f6\u673a)\r\n    4. \u591a\u9009\r\n    5. search\u540e\u6570\u636e\u7b5b\u9009 (virtual list)\r\n    6. \u516c\u5171\u7c7b\u578b\u62bd\u53d6\r\n    7. icon\r\n    8. clear\r\n    9. group\r\n    10. \u5b57\u7b26\u4e32\u5904\u7406\r\n*/\r\n\r\nconst Selector = (props: any) => {\r\n  const { onChange } = props;\r\n  const list = [1, 2, 3];\r\n  const handleClick = (E: any, val: any) => {\r\n    onChange?.(val);\r\n  };\r\n  return (\r\n    <ul>\r\n      {list.map((item) => (\r\n        <li\r\n          key={item}\r\n          onClick={(e) => {\r\n            handleClick(e, item);\r\n          }}\r\n        >\r\n          {item}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(\'three\');\r\n  const [pickerValue, setPickerValue] = useState(\'one\');\r\n  const list = [1, 2, 3];\r\n  const onChange = (val: any) => {\r\n    console.log(\'selectRef\', selectRef);\r\n    setValue(val);\r\n  };\r\n\r\n  const pickerChange = (val: any) => {\r\n    setPickerValue(val);\r\n  };\r\n\r\n  const selectRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      {/* @ts-ignore */}\r\n      <Select defaultSelected={\'three\'} value={value} onChange={onChange} ref={selectRef}>\r\n        {/* {\r\n                    list.map((item) => (\r\n                        <li\r\n                            key={item}\r\n                        >\r\n                            {item}\r\n                        </li>\r\n                    ))\r\n                } */}\r\n        {/* <Option value="one">\r\n                    <span>1</span>\r\n                </Option>\r\n                <Option value="two">2</Option>\r\n                <Option value="three">3</Option>\r\n                <Option value="four">4</Option> */}\r\n        {/* @ts-ignore */}\r\n        <OptGroup label="number">\r\n          <Option value="one">\r\n            <span>1</span>\r\n          </Option>\r\n          <Option value="two">2</Option>\r\n          <Option value="three">3</Option>\r\n          <Option value="four">4</Option>\r\n        </OptGroup>\r\n        <OptGroup>\r\n          <Option value="black">\r\n            <span>a</span>\r\n          </Option>\r\n          <span>1</span>\r\n          <Option value="blue">b</Option>\r\n          <Option value="red">c</Option>\r\n          <Option value="yellow">d</Option>\r\n        </OptGroup>\r\n        test string\r\n      </Select>\r\n      <div>current: {value}</div>\r\n      <Picker value={pickerValue} onChange={pickerChange} prefixCls={\'picker\'}>\r\n        <Selector></Selector>\r\n      </Picker>\r\n      <div>currentPicker: {pickerValue}</div>\r\n      \u591a\u9009\uff1a\r\n      {/* @ts-ignore */}\r\n      <Select defaultSelected={[\'one\', \'three\']} value={[\'one\', \'three\']} multiple>\r\n        {/* {\r\n                    list.map((item) => (\r\n                        <li\r\n                            key={item}\r\n                        >\r\n                            {item}\r\n                        </li>\r\n                    ))\r\n                } */}\r\n        {/* <Option value="one">\r\n                    <span>1</span>\r\n                </Option>\r\n                <Option value="two">2</Option>\r\n                <Option value="three">3</Option>\r\n                <Option value="four">4</Option> */}\r\n        <OptGroup>\r\n          <Option value="one">\r\n            <span>1</span>\r\n          </Option>\r\n          <Option value="two">2</Option>\r\n          <Option value="three">3</Option>\r\n          <Option value="four">4</Option>\r\n        </OptGroup>\r\n        <OptGroup>\r\n          <Option value="black">\r\n            <span>a</span>\r\n          </Option>\r\n          <span>1</span>\r\n          <Option value="blue">b</Option>\r\n          <Option value="red">c</Option>\r\n          <Option value="yellow">d</Option>\r\n        </OptGroup>\r\n      </Select>\r\n    </>\r\n  );\r\n};',He="import OptGroup from './OptGroup';\nimport Option from './Option';\nimport Select from './select';\nexport type { SelectProps } from './interface';\nexport { Option, OptGroup };\nexport default Select;",Ie="import React from 'react';\r\nimport { OptGroupProps } from './interface';\r\n\r\nconst OptGroup: React.FC<OptGroupProps> = (props) => {\r\n  const { prefixCls, children, onChange, disabled } = props;\r\n  const handleChange = (val: any) => {\r\n    onChange?.(val);\r\n  };\r\n\r\n  const isValidChildren = children && typeof children !== 'string';\r\n\r\n  let optionNode = isValidChildren ? React.Children.toArray(children) : children;\r\n\r\n  return (\r\n    <div className={`${prefixCls}-optGroup`}>\r\n      {isValidChildren\r\n        ? (optionNode as React.ReactElement[]).map((option, i) => {\r\n            return (\r\n              <React.Fragment key={i}>\r\n                {React.cloneElement(option, {\r\n                  onChange: handleChange,\r\n                  groupDisabled: disabled,\r\n                })}\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        : optionNode}\r\n    </div>\r\n  );\r\n};\r\n\r\nOptGroup.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\nexport default OptGroup;",Pe="import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { OptionProps } from './interface';\r\n\r\nconst Option: React.FC<OptionProps> = (props) => {\r\n  const { prefixCls, value, multiple, onChange, children, selected, disabled, groupDisabled } =\r\n    props;\r\n  const handleClick = () => {\r\n    onChange?.(value);\r\n  };\r\n  return (\r\n    <div\r\n      className={`${prefixCls}-option ${classNames({\r\n        selected: selected,\r\n      })}`}\r\n      onClick={groupDisabled || disabled ? () => {} : handleClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nOption.defaultProps = {\r\n  disabled: false,\r\n};\r\n\r\nexport default Option;",Re="import React from 'react';\r\nimport { ConfigContext } from '../common-provider/context';\r\nimport { SelectProps } from './interface';\r\nimport NativeSelect from './native/nativeSelect';\r\nimport OptGroup from './OptGroup';\r\nimport Option from './Option';\r\nimport Picker from './Picker';\r\n\r\nconst ForwardSelect: React.ForwardRefRenderFunction<unknown, SelectProps> = (\r\n  { prefixCls: customizePrefixCls, ...props },\r\n  ref,\r\n) => {\r\n  const { style, className, children, multiple, defaultSelected, value, onChange } = props;\r\n  const { getPrefixCls } = React.useContext(ConfigContext);\r\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\r\n\r\n  const nativeGroups = [\r\n    {\r\n      label: 'animal',\r\n      disabled: false,\r\n      options: [\r\n        {\r\n          label: 'dog',\r\n          value: 'dog',\r\n          disabled: false,\r\n        },\r\n        {\r\n          label: 'cat',\r\n          value: 'cat',\r\n          disabled: false,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'city',\r\n      disabled: false,\r\n      options: [\r\n        {\r\n          label: 'beijing',\r\n          value: 'beijing',\r\n          disabled: false,\r\n        },\r\n        {\r\n          label: 'shanghai',\r\n          value: 'shanghai',\r\n          disabled: true,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    current,\r\n  }));\r\n\r\n  const [current, setCurrent] = React.useState<SelectProps['value'] | undefined>(\r\n    defaultSelected || value,\r\n  );\r\n\r\n  /* \u53ea\u5141\u8bb8\u975estring\u7684\u7ed3\u6784\u4f5c\u4e3achildren\u6e32\u67d3 */\r\n  const PickerNodeList =\r\n    children && typeof children !== 'string' && (children as React.ReactNode[]).length > 0\r\n      ? (React.Children.toArray(children) as React.ReactElement[])\r\n      : null;\r\n\r\n  console.log('PickerNodeList', PickerNodeList);\r\n\r\n  const pickerChange = (val: any) => {\r\n    setCurrent(val);\r\n    onChange?.(val);\r\n  };\r\n\r\n  const isOtionSelected = (val: any) => {\r\n    console.log('current', current);\r\n    if (Array.isArray(current)) {\r\n      console.log('val', val);\r\n      return current.indexOf(val) !== -1;\r\n    } else {\r\n      return val === current;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${prefixCls} ${className || ''}`} style={style}>\r\n      <Picker\r\n        onChange={pickerChange}\r\n        value={current}\r\n        defaultSelected={defaultSelected}\r\n        prefixCls={prefixCls}\r\n        multiple={multiple}\r\n      >\r\n        {PickerNodeList && PickerNodeList?.length > 0\r\n          ? PickerNodeList.map((node: any, i) => {\r\n              console.log('node', node);\r\n\r\n              if (typeof node === 'string') return <React.Fragment key={i}>{node}</React.Fragment>;\r\n\r\n              let nodeType = node.type.name;\r\n\r\n              return nodeType === 'OptGroup' ? (\r\n                <OptGroup key={node.key} prefixCls={prefixCls} {...node.props}>\r\n                  {node.props.children &&\r\n                    node.props.children.map((option: any, index: number) => {\r\n                      if (typeof option === 'string')\r\n                        return <React.Fragment>{option}</React.Fragment>;\r\n                      return (\r\n                        <Option\r\n                          {...option.props}\r\n                          selected={isOtionSelected(option.props.value)}\r\n                          key={option.props.value || index}\r\n                          prefixCls={prefixCls}\r\n                          multiple={multiple}\r\n                        ></Option>\r\n                      );\r\n                    })}\r\n                </OptGroup>\r\n              ) : (\r\n                <Option\r\n                  {...node.props}\r\n                  selected={isOtionSelected(node.props.value)}\r\n                  key={node.key}\r\n                  prefixCls={prefixCls}\r\n                  multiple={multiple}\r\n                ></Option>\r\n              );\r\n            })\r\n          : null}\r\n      </Picker>\r\n\r\n      {/* \u6839\u636echildren\u751f\u6210\u539f\u751fselect */}\r\n      <NativeSelect groupList={nativeGroups} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Select = React.forwardRef<unknown, SelectProps>(ForwardSelect);\r\n\r\nSelect.defaultProps = {};\r\n// Select.Option = Option;\r\n// Select.OptGroup = OptGroup;\r\n\r\nexport default Select;",we='import React from "react"\r\nimport { BaseOptionProps, NativeSelectProps } from "../interface"\r\n\r\n/* multiple \u5219\u8fd4\u56deinput \u53cd\u4e4b \u8fd4\u56de\u539f\u751fselect */\r\n\r\nexport const BaseOption: React.FC<BaseOptionProps> = (props) => {\r\n    const { label, value, disabled } = props\r\n    return (\r\n        <option value={value} disabled={disabled} key={value}>\r\n            {label}\r\n        </option>\r\n    )\r\n}\r\n\r\nconst NativeSelect: React.FC<NativeSelectProps> = (props) => {\r\n    const { groupList } = props\r\n\r\n    return (\r\n        <select name="pets" multiple size={4} style={{ display: "none" }}>\r\n            {groupList.map((group) => {\r\n                return (\r\n                    <optgroup\r\n                        label={group.label}\r\n                        key={group.label}\r\n                        disabled={group.disabled}\r\n                    >\r\n                        {group?.options?.map((option) => (\r\n                            <BaseOption\r\n                                key={option.value}\r\n                                value={option.value}\r\n                                disabled={option.disabled}\r\n                                label={option.label}\r\n                            />\r\n                        ))}\r\n                    </optgroup>\r\n                )\r\n            })}\r\n        </select>\r\n    )\r\n}\r\nexport default NativeSelect',Le="import { useClickAway } from 'ahooks';\nimport domAlign from 'dom-align';\nimport React from 'react';\nimport Input from '../input';\nimport DropDown from './DropDown';\nimport { PickerProps } from './interface';\n\nconst Picker: React.FC<PickerProps> = (props) => {\n  const { prefixCls, multiple, defaultSelected, children, value, onChange, className, style } =\n    props;\n  const [selectedValue, setSelectedValue] = React.useState(defaultSelected || value);\n\n  const [searchValue, setSearchValue] = React.useState<any>(defaultSelected);\n\n  const [show, setShow] = React.useState<boolean>(false);\n\n  const dropDownNodeRef = React.useRef();\n\n  const dropDownRef = React.useRef();\n\n  const inputRef = React.useRef();\n\n  const align = () => {\n    domAlign(dropDownNodeRef?.current, inputRef?.current, {\n      points: ['tl', 'tl'],\n      offset: [0, 22],\n    });\n  };\n\n  React.useEffect(() => {\n    show && align();\n  }, [show]);\n\n  React.useEffect(() => {\n    setShow(false);\n  }, [selectedValue]);\n\n  useClickAway(() => {\n    setShow(false);\n  }, [dropDownNodeRef?.current, inputRef?.current]);\n\n  const inputFocus = (e: any) => {\n    setShow(true);\n  };\n\n  const inputBlur = (e: any) => {};\n\n  const handleChange = (val: any) => {\n    let currentValue = val;\n    if (multiple) {\n      if (Array.isArray(selectedValue)) {\n        currentValue = [...selectedValue];\n        currentValue.push(val);\n        setSelectedValue(currentValue);\n      }\n    } else {\n      setSelectedValue(val);\n    }\n\n    onChange?.(currentValue);\n  };\n\n  const searchChange = (e: any) => {\n    setSearchValue(e.target.value);\n  };\n\n  const deleteValue = (val: any) => {\n    console.log('deleteValue', val);\n    if (Array.isArray(selectedValue)) {\n      let currentValue = [...selectedValue];\n      currentValue.indexOf(val) !== -1 && currentValue.splice(currentValue.indexOf(val), 1);\n      setSelectedValue(currentValue);\n      onChange?.(currentValue);\n    }\n  };\n\n  const clear = () => {\n    let currentValue: any = '';\n    if (Array.isArray(selectedValue)) {\n      setSelectedValue([]);\n      currentValue = [];\n    } else {\n      setSelectedValue('');\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <>\n      <div className={`${prefixCls}-picker ${className}`} style={style}>\n        <div className={`${prefixCls}-selector-container`}>\n          <span className={`${prefixCls}-selector-search`}>\n            <input\n              type={'search'}\n              onFocus={inputFocus}\n              onBlur={inputBlur}\n              value={searchValue}\n              onChange={searchChange}\n              ref={(el: any) => ((inputRef as any).current = el)}\n            />\n          </span>\n          <span className=\"delete-icon\" onClick={clear}>\n            {' '}\n            clear{' '}\n          </span>\n          {selectedValue &&\n            (!Array.isArray(selectedValue) ? (\n              <span className={`${prefixCls}-selector-item`}>{selectedValue}</span>\n            ) : (\n              selectedValue.length > 0 &&\n              selectedValue.map((item, i) => {\n                return (\n                  <span className={`${prefixCls}-selector-item`} key={i}>\n                    {item}\n                    {multiple && (\n                      <i\n                        className={'delete-icon'}\n                        onClick={() => {\n                          deleteValue(item);\n                        }}\n                      >\n                        x\n                      </i>\n                    )}\n                  </span>\n                );\n              })\n            ))}\n        </div>\n        <div className={`${prefixCls}-picker-icon`}> - </div>\n      </div>\n      <DropDown\n        current={selectedValue}\n        searchValue={searchValue}\n        prefixCls={prefixCls}\n        children={children}\n        onChange={handleChange}\n        ref={(el) => ((dropDownNodeRef as any).current = el)}\n        className={show ? 'show' : 'hidden'}\n      />\n    </>\n  );\n};\n\nexport default Picker;",Me="import React from 'react';\r\nimport { DropDownProps } from '../interface';\r\nimport Portals from './Portals';\r\n\r\nconst ForwardDropDown: React.ForwardRefRenderFunction<unknown, DropDownProps> = (props, ref) => {\r\n  const { prefixCls, children, trigger, multiple, onChange, current, className, searchValue } =\r\n    props;\r\n\r\n  const handleSelect = (val: any) => {\r\n    console.log('choosen', val);\r\n    onChange?.(val);\r\n  };\r\n\r\n  const isValidChildren = children && typeof children !== 'string';\r\n\r\n  let dropDownNode = isValidChildren ? React.Children.toArray(children) : children;\r\n\r\n  return (\r\n    <Portals container={document.body}>\r\n      {/* @ts-ignore */}\r\n      <div className={`picker-dropDown ${prefixCls}-dropDown ${className}`} id=\"source\" ref={ref}>\r\n        {isValidChildren\r\n          ? (dropDownNode as React.ReactElement[]).map((option, i) => {\r\n              return (\r\n                <React.Fragment key={i}>\r\n                  {React.cloneElement(option, {\r\n                    onChange: handleSelect,\r\n                  })}\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          : dropDownNode}\r\n      </div>\r\n    </Portals>\r\n  );\r\n};\r\n\r\nconst DropDown = React.forwardRef<unknown, DropDownProps>(ForwardDropDown);\r\n\r\nexport default DropDown;",Te="import React, {useEffect} from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport {PortalsProps} from '../interface'\r\n\r\nconst Portals: React.FC<PortalsProps> = ({ container, children }) => {\r\n    const sourceNode = <div className=\"portals-wrapper\">\r\n        {children}\r\n    </div>\r\n    return container\r\n        ? ReactDOM.createPortal(\r\n              // Any valid React child: JSX, strings, arrays, etc.\r\n              sourceNode,\r\n              // A DOM element\r\n              container\r\n          )\r\n        : null\r\n}\r\n\r\nexport default Portals",ke="import './index.less';",Ne="@selectPrefix: cherry-select;\n.@{selectPrefix} {\n  &-option {\n    margin: 5px;\n    color: #000000;\n    cursor: pointer;\n    &.selected {\n      color: red;\n    }\n    &:hover {\n      color: red;\n    }\n  }\n}\n.portals-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  .picker-dropDown {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n    min-width: 150px;\n    padding: 5px;\n    overflow: hidden;\n    color: #000000;\n    font-size: 14px;\n    background-color: #fff;\n    box-shadow: 0 3px 6px -4px #0000001f, 0 6px 16px #00000014, 0 9px 28px 8px #0000000d;\n  }\n  .hidden {\n    display: none;\n  }\n}",De="/*\n * @Author: niyongwei\n * @Date: 2022-04-07 10:32:36\n * @LastEditors: niyongwei\n * @LastEditTime: 2022-04-07 10:58:13\n * @FilePath: \\git-work\\components\\src\\upload\\demo\\basic.tsx\n * @Description:\n *\n * Copyright (c) 2022 by nyw, All Rights Reserved.\n */\nimport React from 'react';\nimport Upload from '..';\n// import '../style';\nexport default () => {\n  const defaultList = [\n    {\n      uid: 'rc-upload-1659595914921-2',\n      lastModified: 1645251953703,\n      lastModifiedDate: 'Sat Feb 19 2022 14:25:53 GMT+0800 (\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4) {}',\n      name: 'test2.png',\n      size: 168078,\n      type: 'image/png',\n      webkitRelativePath: '',\n    },\n  ];\n  const [listValue, setListValue] = React.useState([]);\n  const [percent, setPercent] = React.useState(0);\n  const beforeUpload = async (file: any, FileList: any) => {\n    console.log(file);\n    console.log(FileList);\n  };\n  const onProgress = (e: any, file: any) => {\n    setPercent(e.percent);\n  };\n  const onSuccess = (a: any, b: any, c: any) => {\n    console.log(a, b, c);\n    console.log('uploadRef', uploadRef.current);\n    console.log('listValue', listValue);\n  };\n  const onChange = (file: any, fileList: any) => {\n    console.log('change', file, fileList);\n    setListValue(fileList);\n    setPercent(0);\n  };\n  const onStart = (file: any) => {\n    console.log('start:', file);\n  };\n  const onFileLimit = (limit: any) => {\n    alert(`\u8d85\u51fa${limit}\u4e2a\u9650\u5236\u4e86`);\n  };\n  const onFileSize = (size: any) => {\n    alert(`\u5f53\u524d${size}kb,\u8d85\u51fa\u9650\u5236\u4e86`);\n  };\n  const uploadRef = React.useRef(null);\n\n  const itemRender = (file: any, option: any) => {\n    const { del: deleteItem } = option;\n    return (\n      <div className=\"upload-item\">\n        <div>{file.name}</div>\n        <div onClick={deleteItem}>\u5220\u9664</div>\n      </div>\n    );\n  };\n\n  const deleteFN = (index: number) => {\n    let fielList = [...listValue];\n    fielList.splice(index, 1);\n    setListValue(fielList);\n  };\n\n  return (\n    <>\n      {/* <div className=\"upload-list\">\n                {listValue.map((item, index) => (\n                    <div className=\"upload-list-item\" key={index}>\n                        <div className=\"name\">{item?.name}</div>\n                        <div\n                            className=\"delete\"\n                            onClick={() => {\n                                deleteFN(index)\n                                // uploadRef?.current?.deleteItem?.(item)\n                            }}\n                        >\n                            \u5220\u9664\n                        </div>\n                    </div>\n                ))}\n            </div> */}\n      <Upload\n        accept={'.png'}\n        fileSize={1000}\n        onFileLimit={onFileLimit}\n        fileLimit={2}\n        onFileSize={onFileSize}\n        action={'upload/add'}\n        beforeUpload={beforeUpload}\n        defaultFile={defaultList}\n        onProgress={onProgress}\n        onSuccess={onSuccess}\n        prefixCls=\"diyClass\"\n        onChange={onChange}\n        listValue={listValue}\n        itemRender={itemRender}\n        deleteIcon={<div>\u5220\u9664</div>}\n        ref={uploadRef}\n        onStart={onStart}\n        type=\"drag\"\n      >\n        \u4e0a\u4f20 \u5df2\u4e0a\u4f20: {listValue.length} \u8fdb\u5ea6\uff1a{percent}\n      </Upload>\n    </>\n  );\n};",Se="import Upload from './upload';\n\nexport type { UploadProps } from './interface';\n\nexport default Upload;",Oe="import RcUpload, { UploadProps as RcUploadTypes } from 'rc-upload';\nimport type { UploadProgressEvent } from 'rc-upload/lib/interface';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport React from 'react';\nimport { ConfigContext } from '../common-provider/context';\nimport { FileProps, InsertFileProps, UploadProps } from './interface';\nimport UploadList from './uploadList';\n\nimport './style';\n\nconst ForwardRefUpload: React.ForwardRefRenderFunction<unknown, UploadProps> = (\n  {\n    //\u81ea\u5b9a\u4e49class\u524d\u7f00prefixCls\n    prefixCls: customizePrefixCls,\n    ...props\n  },\n  ref,\n) => {\n  const {\n    defaultFile,\n    listType,\n    listValue,\n    itemRender,\n    deleteIcon,\n    onChange,\n    onStart,\n    beforeUpload,\n    onProgress,\n    onSuccess,\n    onError,\n    fileLimit,\n    onFileLimit,\n    fileSize,\n    onFileSize,\n  } = props;\n\n  React.useImperativeHandle(ref, () => ({\n    onBatchStart,\n    onSuccess: mergeSuccess,\n    onProgress: mergeProgress,\n    onError: mergeError,\n    fileList,\n    upload: rcUpload.current,\n    deleteItem,\n  }));\n\n  const { getPrefixCls } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('upload', customizePrefixCls); //cherry-upload\n\n  const [fileList, setFileList] = useMergedState(defaultFile || [], {\n    value: listValue,\n    postState: (list) => list ?? [],\n  });\n\n  /* React.useEffect(()=>{\n      setFileList(listValue || [])\n    },[listValue]) */\n\n  // \u89e3\u51b3file\u4e0d\u80fd\u901a\u8fc7\u4f7f\u7528\u5bf9\u8c61\u5c55\u5f00\u95ee\u9898\n  const insertedFileObj = (file: FileProps, insertObj: InsertFileProps) => {\n    const { uid, lastModified, lastModifiedDate, name, size, type, webkitRelativePath } = file;\n    return {\n      uid,\n      lastModified,\n      lastModifiedDate,\n      name,\n      size,\n      type,\n      webkitRelativePath,\n      ...insertObj,\n    };\n  };\n\n  //\u4e0a\u4f20\u5217\u8868\u53d1\u751f\u6539\u53d8\u5904\u7406\u65b9\u6cd5\n  const updateUploadList = (file: FileProps, updateType?: string) => {\n    let cloneFileList = [...fileList];\n\n    //\u5224\u65ad\u53d1\u751f\u6539\u53d8\u7684file \u662f\u65b0\u589e\uff0c\u5220\u9664\u8fd8\u662f\u4fee\u6539\n    let fileIndex = cloneFileList.findIndex((item) => item.uid === file.uid);\n\n    if (fileIndex === -1) {\n      cloneFileList.push(file);\n    } else {\n      cloneFileList[fileIndex] = file;\n      updateType === 'delete' && cloneFileList.splice(fileIndex, 1);\n    }\n    return cloneFileList;\n  };\n\n  const deleteItem = (file: FileProps) => {\n    let removedFileList = updateUploadList(file, 'delete');\n    setFileList(removedFileList);\n    onChange?.(file, removedFileList);\n  };\n\n  //\u4e3afile\u65b0\u589e\u5c5e\u6027, antd\u505a\u6cd5\uff1aonBatchStart\u65f6\u5728file\u4e2d\u690d\u5165\u65b0\u589e\u7684\u5c5e\u6027\n  const onBatchStart: RcUploadTypes['onBatchStart'] = (\n    FileList: {\n      file: FileProps;\n      parsedFile: string | File | Blob;\n    }[],\n  ) => {\n    const insertObj = {\n      percent: 0,\n      status: 'start',\n    };\n    let insertedFileInfoList = FileList.map((item) => {\n      let originFileObj = item.file;\n      let clone: any;\n\n      try {\n        // @ts-ignore\n        clone = new File([originFileObj], originFileObj.name, {\n          type: originFileObj.type,\n        }) as any as FileProps;\n        console.log('clone', clone);\n      } catch (e) {\n        console.log('\u8f6c\u5316\u5931\u8d25', e);\n        // @ts-ignore\n        clone = new Blob([originFileObj], {\n          type: originFileObj.type,\n        }) as any as FileProps;\n        clone.name = originFileObj.name;\n        clone.lastModifiedDate = new Date();\n        clone.lastModified = new Date().getTime();\n      }\n      return insertedFileObj(clone, insertObj);\n    });\n    let nextFileList = [...fileList, ...insertedFileInfoList];\n\n    setFileList(nextFileList as FileProps[]);\n  };\n\n  /* \u4e0a\u4f20\u751f\u547d\u5468\u671f */\n  const mergeStart: RcUploadTypes['onStart'] = (file: FileProps) => {\n    onStart?.(file);\n  };\n\n  const mergeBeforeUpload: RcUploadTypes['beforeUpload'] = async (\n    file: FileProps,\n    FileList: FileProps[],\n  ) => {\n    if (beforeUpload) {\n      let result = await beforeUpload(file, FileList);\n      if (result === false) {\n        return result;\n      }\n    }\n    const { size } = file;\n    //@ts-ignore\n    if (fileSize && size / 1024 > fileSize) {\n      //@ts-ignore\n      onFileSize?.(size / 1024);\n      return false;\n    }\n\n    if (fileLimit && fileList.length >= fileLimit) {\n      onFileLimit?.(fileList.length);\n      return false;\n    }\n  };\n\n  const mergeProgress: RcUploadTypes['onProgress'] = (\n    event: UploadProgressEvent,\n    file: FileProps,\n  ) => {\n    const insertObj = insertedFileObj(file, {\n      percent: event.percent,\n      status: 'pending',\n    });\n    let nextFileList = updateUploadList(insertObj as FileProps);\n    setFileList(nextFileList);\n    onProgress?.(event, file);\n  };\n\n  const mergeSuccess: RcUploadTypes['onSuccess'] = (\n    response: Record<string, unknown>,\n    file: FileProps,\n    xhr: XMLHttpRequest,\n  ) => {\n    const insertObj = insertedFileObj(file, {\n      percent: 100,\n      status: 'success',\n      xhr,\n      response,\n    });\n    let nextFileList = updateUploadList(insertObj as FileProps);\n    setFileList(nextFileList);\n    onChange?.(file, nextFileList);\n    onSuccess?.(response, file, xhr);\n  };\n\n  const mergeError: RcUploadTypes['onError'] = (\n    error: Error,\n    ret: Record<string, unknown>,\n    file: FileProps,\n  ) => {\n    const insertObj = insertedFileObj(file, {\n      status: 'error',\n    });\n    let nextFileList = updateUploadList(insertObj as FileProps);\n    setFileList(nextFileList);\n    onError?.(error, ret, file);\n  };\n\n  //rc-upload\u5c5e\u6027\u5355\u72ec\u62ce\u51fa\u6765\u5199\n  const RcUploadProps = {\n    ...(props as RcUploadTypes),\n    prefixCls,\n    onStart: mergeStart,\n    beforeUpload: mergeBeforeUpload,\n    onSuccess: mergeSuccess,\n    onError: mergeError,\n    onProgress: mergeProgress,\n    onBatchStart,\n  };\n\n  const rcUpload = React.useRef(null);\n\n  return (\n    <div className={`${prefixCls}-wrapper`}>\n      <RcUpload {...RcUploadProps} ref={rcUpload} />\n      <UploadList\n        prefixCls={prefixCls}\n        fileList={fileList}\n        itemRender={itemRender}\n        listType={listType}\n        deleteIcon={deleteIcon}\n        deleteItem={deleteItem}\n      />\n    </div>\n  );\n};\n\nconst Upload = React.forwardRef<unknown, UploadProps>(\n  ForwardRefUpload,\n) as React.ForwardRefExoticComponent<\n  React.PropsWithChildren<UploadProps> & React.RefAttributes<any>\n>;\n\nUpload.defaultProps = {\n  deleteIcon: <span>x</span>,\n  type: 'select',\n};\n\nexport default Upload;",Fe='import * as React from "react"\r\nimport { UploadListProps, FileProps } from "./interface"\r\nimport { previewImage } from "./utils"\r\nimport Item from "./item"\r\n\r\nconst UploadList: React.FC<UploadListProps> = (props) => {\r\n    const {\r\n        prefixCls,\r\n        fileList,\r\n        listType,\r\n        itemRender,\r\n        deleteIcon,\r\n        deleteItem,\r\n    } = props\r\n\r\n    let itemList = [\r\n        ...fileList.map((file: FileProps) => ({\r\n            key: file.uid,\r\n            file,\r\n        })),\r\n    ]\r\n    //TODO: \u8fc7\u6ee4status\u4e3astart\u7684\u6570\u636e\r\n    itemList = itemList.filter((item) => item.file.status !== "start")\r\n    console.log("itemList", itemList)\r\n    /* itemList.map((item) => {\r\n        const { file } = item\r\n        console.log("currfile", file)\r\n        previewImage(file as File)\r\n            .then((previewDataUrl: string) => {\r\n                file.thumbUrl = previewDataUrl || ""\r\n            })\r\n            .catch((e) => {\r\n                console.error(e)\r\n            })\r\n    }) */\r\n    return (\r\n        <div className={`${prefixCls}-list`}>\r\n            {itemList.map((item, index) => (\r\n                <Item\r\n                    prefixCls={prefixCls}\r\n                    key={index}\r\n                    file={item.file}\r\n                    listType={listType}\r\n                    itemRender={itemRender}\r\n                    deleteIcon={deleteIcon}\r\n                    deleteItem={deleteItem}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadList',Be='import * as React from "react"\r\nimport { ItemProps } from "./interface"\r\nimport Progress from "./progress"\r\n\r\nconst Item: React.FC<ItemProps> = (props) => {\r\n    const {\r\n        prefixCls,\r\n        file,\r\n        deleteIcon,\r\n        listType,\r\n        itemRender,\r\n        deleteItem,\r\n    } = props\r\n\r\n    const handleDelete = (e: React.MouseEvent<HTMLElement>) => {\r\n        deleteItem?.(file)\r\n    }\r\n    const itemDom = (\r\n        <div className={`${prefixCls}-list-item`}>\r\n            <div className={`${prefixCls}-item-logo`}></div>\r\n            {console.log(file)}\r\n            <div className={`${prefixCls}-item-name`}>{file.name}</div>\r\n            <img\r\n                src={file.thumbUrl || file.url}\r\n                alt={file.name}\r\n                className={`${prefixCls}-list-item-image`}\r\n            />\r\n            <div className={`${prefixCls}-item-delete`} onClick={handleDelete}>\r\n                {deleteIcon}\r\n            </div>\r\n            <Progress percent={file?.percent} prefixCls={prefixCls} />\r\n        </div>\r\n    )\r\n    return typeof itemRender === "function"\r\n        ? itemRender(file, {\r\n              del: deleteItem?.bind(null, file),\r\n          })\r\n        : itemRender === false\r\n        ? null\r\n        : itemDom\r\n}\r\n\r\nexport default Item',Ve='import * as React from "react"\r\nimport {ProgressProps } from "./interface"\r\n\r\nconst Progress: React.FC<ProgressProps> = (props) => {\r\n    const {prefixCls, percent} = props\r\n    return <div className={`${prefixCls}-process`}>\r\n        {percent}\r\n    </div>\r\n}\r\n\r\nexport default Progress',Ae="import './index.less'",ze=".upload-area{\r\n    color: blue;\r\n}",Ue={"alert-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"025M"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:d},"index.tsx":{import:"..",content:c},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"style/index.ts":{import:"./style",content:f},"style/index.less":{import:"./index.less",content:m},"icon/index.tsx":{import:"../../icon",content:y},"index.less":{import:"./index.less",content:g}},dependencies:{react:{version:"*"},classnames:{version:"2.3.2"},"prop-types":{version:"15.8.1"},"react-icons":{version:"4.7.1"}},identifier:"alert-basic"}},"button-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"oSWt"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:h},"index.tsx":{import:"..",content:v},"button.tsx":{import:"./button",content:b},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"icon/index.tsx":{import:"../../icon",content:y},"interface.ts":{import:"./interface",content:C},"style/index.ts":{import:"../style",content:x},"styles/index.ts":{import:"../../styles",content:E},"styles/index.less":{import:"./index.less",content:H},"style/index.less":{import:"./index.less",content:I},"button.less":{import:"./button.less",content:P}},dependencies:{react:{version:"*"},classnames:{version:"2.3.2"},"react-icons":{version:"4.7.1"}},identifier:"button-basic"}},"checkbox-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"wG1B"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:R},"index.tsx":{import:"..",content:w},"checkBox.tsx":{import:"./checkBox",content:L},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"checkGroup.tsx":{import:"./checkGroup",content:M},"style/index.ts":{import:"../style",content:T},"style/index.less":{import:"./index.less",content:k}},dependencies:{react:{version:"16.14.0"},classnames:{version:"2.3.2"}},identifier:"checkbox-basic"}},"dialog-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"t6XY"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:N},"index.tsx":{import:"..",content:D},"confirmDialog.tsx":{import:"./confirmDialog",content:S},"button/index.tsx":{import:"..",content:v},"button.tsx":{import:"./button",content:b},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"icon/index.tsx":{import:"../../icon",content:y},"interface.ts":{import:"./interface",content:C},"dialog.tsx":{import:"./dialog",content:O},"popover/portal.tsx":{import:"../popover/portal",content:F},"popover/utils.ts":{import:"./utils",content:B},"util/closeByEsc.ts":{import:"../util/closeByEsc",content:V},"clear.ts":{import:"./clear",content:A},"open.tsx":{import:"./open",content:z},"style/index.ts":{import:"../style",content:U},"style/index.less":{import:"./index.less",content:$},"basic.less":{import:"./basic.less",content:j}},dependencies:{react:{version:"^16.14.0"},classnames:{version:"2.3.2"},"react-icons":{version:"4.7.1"},"body-scroll-lock":{version:"4.0.0-beta.0"},"react-transition-group":{version:"4.4.5"},"react-dom":{version:"16.14.0"}},identifier:"dialog-basic"}},"form-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"Sv7Z"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:K},"index.tsx":{import:"..",content:G},"form.tsx":{import:"./form",content:J},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"style/index.ts":{import:"../style",content:q},"style/index.less":{import:"./index.less",content:_}},dependencies:{react:{version:"16.14.0"}},identifier:"form-basic"}},"input-input":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"6dn7"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:W},"index.tsx":{import:"..",content:X},"input.tsx":{import:"./input",content:Y},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"BasicInput.tsx":{import:"./BasicInput",content:Z},"icon/index.tsx":{import:"../../icon",content:y},"inputNumber.tsx":{import:"./inputNumber",content:Q},"style/index.ts":{import:"./style",content:ee},"style/index.less":{import:"./index.less",content:ne},"index.less":{import:"./index.less",content:te}},dependencies:{react:{version:">=16.9.0"},"rc-util":{version:"5.27.2"},"react-dom":{version:">=16.9.0"},classnames:{version:"2.3.2"},"react-icons":{version:"4.7.1"},"rc-input-number":{version:"7.4.0"}},identifier:"input-input"}},"pagination-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"jnCx"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:re},"index.tsx":{import:"..",content:ie},"pagination.tsx":{import:"./pagination",content:oe},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"style/index.ts":{import:"../style",content:ae},"style/index.less":{import:"./index.less",content:le}},dependencies:{react:{version:"16.14.0"},classnames:{version:"2.3.2"}},identifier:"pagination-basic"}},"popover-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"Az1e"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:se},"index.tsx":{import:"..",content:pe},"popover.tsx":{import:"./popover",content:de},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"util/closeByEsc.ts":{import:"../util/closeByEsc",content:V},"portal.tsx":{import:"../popover/portal",content:F},"popover/utils.ts":{import:"./utils",content:B},"trigger.tsx":{import:"./trigger",content:ce},"button/index.tsx":{import:"..",content:v},"button.tsx":{import:"./button",content:b},"icon/index.tsx":{import:"../../icon",content:y},"interface.ts":{import:"./interface",content:C},"input/index.tsx":{import:"..",content:X},"input.tsx":{import:"./input",content:Y},"BasicInput.tsx":{import:"./BasicInput",content:Z},"inputNumber.tsx":{import:"./inputNumber",content:Q},"style/index.ts":{import:"../style",content:ue},"style/index.less":{import:"./index.less",content:ne},"index.less":{import:"./index.less",content:fe}},dependencies:{react:{version:">=16.9.0"},ahooks:{version:"3.7.4"},"dom-align":{version:"1.12.4"},classnames:{version:"2.3.2"},"react-dom":{version:">=16.9.0"},"react-is":{version:"18.2.0"},"react-icons":{version:"4.7.1"},"rc-util":{version:"5.27.2"},"rc-input-number":{version:"7.4.0"}},identifier:"popover-basic"}},"rate-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"hl8E"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:me},"index.tsx":{import:"..",content:ye},"FingerRate.tsx":{import:"./FingerRate",content:ge},"rate.tsx":{import:"./rate",content:he},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"interface.ts":{import:"./interface",content:ve},"style/index.ts":{import:"../style",content:be},"style/index.less":{import:"./index.less",content:Ce},"basic.less":{import:"./basic.less",content:xe}},dependencies:{"rc-rate":{version:"2.10.0"},react:{version:"16.14.0"},"react-dom":{version:">=16.9.0"}},identifier:"rate-basic"}},"select-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"ys20"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Ee},"index.tsx":{import:"..",content:He},"OptGroup.tsx":{import:"./OptGroup",content:Ie},"Option.tsx":{import:"./Option",content:Pe},"select.tsx":{import:"./select",content:Re},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"native/nativeSelect.tsx":{import:"./native/nativeSelect",content:we},"Picker.tsx":{import:"./Picker",content:Le},"DropDown/index.tsx":{import:"./DropDown",content:Me},"DropDown/Portals.tsx":{import:"./Portals",content:Te},"style/index.ts":{import:"../style",content:ke},"style/index.less":{import:"./index.less",content:Ne}},dependencies:{react:{version:"^16.8.0 || ^17.0.0 || ^18.0.0"},classnames:{version:"2.3.2"},ahooks:{version:"3.7.4"},"dom-align":{version:"1.12.4"},"react-dom":{version:"16.14.0"}},identifier:"select-basic"}},"upload-basic":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(Object(l["a"])().mark((function e(){return Object(l["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(1),t.e(21),t.e(4)]).then(t.bind(null,"cFx8"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:De},"index.tsx":{import:"..",content:Se},"upload.tsx":{import:"./upload",content:Oe},"common-provider/context.tsx":{import:"../common-provider/context",content:u},"uploadList.tsx":{import:"./uploadList",content:Fe},"item.tsx":{import:"./item",content:Be},"progress.tsx":{import:"./progress",content:Ve},"style/index.ts":{import:"./style",content:Ae},"style/index.less":{import:"./index.less",content:ze}},dependencies:{react:{version:"16.14.0"},"rc-upload":{version:"4.3.4"},"rc-util":{version:"5.27.2"},"react-dom":{version:">=16.9.0"}},identifier:"upload-basic"}}},$e=t("x2v5"),je=t("KcUY"),Ke=t.n(je);n["default"]=e=>o.a.createElement(Ke.a,Object(r["a"])({},e,{config:a,demos:Ue,apis:$e}))},q3YX:function(e){e.exports=JSON.parse('{"menus":{"en-US":{"/getting-started":[{"path":"/getting-started","title":"\u5feb\u901f\u4e0a\u624b","meta":{}}],"/help":[{"path":"/help","title":"\u5e2e\u52a9","meta":{}}],"*":[{"path":"/","title":"cherryui","meta":{}}],"/component":[{"path":"/component/alert","title":"Alert \u8b66\u544a\u63d0\u793a","meta":{}},{"path":"/component/button","title":"Button \u6309\u94ae","meta":{}},{"path":"/component/check-box","title":"CheckBox \u9009\u62e9\u6846","meta":{}},{"path":"/component/dialog","title":"Dialog \u5f39\u6846","meta":{}},{"path":"/component/form","title":"Form \u8868\u5355","meta":{}},{"path":"/component/input","title":"Input \u8f93\u5165\u6846","meta":{}},{"path":"/component/pagination","title":"Pagination \u5206\u9875","meta":{}},{"path":"/component/popover","title":"Popover \u5f39\u51fa\u5c42","meta":{}},{"path":"/component/rate","title":"Rate \u8bc4\u5206","meta":{}},{"path":"/component/select","title":"Select \u9009\u62e9","meta":{}},{"path":"/component/upload","title":"Upload \u4e0a\u4f20","meta":{}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"\u5feb\u901f\u4e0a\u624b","order":1,"path":"/getting-started"},{"title":"\u5e2e\u52a9","path":"/help"},{"path":"/component","title":"Component"}]},"title":"cherry-rc-ui","mode":"site","repository":{"url":"https://github.com/nywgithub/components","branch":"master"},"theme":{}}')},x2v5:function(e){e.exports=JSON.parse('{"alert":{"default":[{"identifier":"kind","description":"Alert \u7684\u7c7b\u578b","type":"\\"info\\" | \\"success\\" | \\"error\\" | \\"warning\\"","default":"info"},{"identifier":"duration","description":"\u81ea\u52a8\u6d88\u5931\u7684\u65f6\u95f4\u95f4\u8ddd\uff0c\u5355\u4f4d\u6beb\u79d2\uff0c\u9ed8\u8ba4\u7a7a","type":"ValueType","default":""},{"identifier":"onClose","description":"\u5173\u95ed\u6309\u94ae\u7684\u56de\u8c03","type":"() => void","default":"null"},{"identifier":"close","description":"\u5173\u95ed\u6309\u94ae","type":"ReactNode","default":"<span>x</span>"},{"identifier":"closeable","description":"\u662f\u5426\u5c55\u793a\u5173\u95ed\u6309\u94ae","type":"boolean","default":"false"}]},"button":{"default":[{"identifier":"prefixCls","type":"string","default":"cherry-button"},{"identifier":"style","type":"any"},{"identifier":"className","type":"string"},{"identifier":"href","type":"string","default":""},{"identifier":"type","type":"string","default":"default"},{"identifier":"size","type":"string","default":"default"},{"identifier":"loading","type":"Boolean","default":"false"},{"identifier":"block","type":"Boolean","default":"false"},{"identifier":"disabled","type":"Boolean","default":"false"},{"identifier":"hollow","type":"Boolean","default":"false"},{"identifier":"dashed","type":"Boolean","default":"false"},{"identifier":"circle","type":"Boolean","default":"false"},{"identifier":"plain","type":"Boolean","default":"false"},{"identifier":"htmlType","type":"string","default":"button"},{"identifier":"types","type":"any"},{"identifier":"onClick","type":"() => void"}]},"checkBox":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"className","type":"string"},{"identifier":"onChange","type":"(e: any) => void"},{"identifier":"checked","type":"boolean","default":"false"},{"identifier":"disabled","type":"boolean","default":"false"},{"identifier":"value","type":"any"}]},"dialog":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"any"},{"identifier":"className","type":"string"},{"identifier":"visible","type":"boolean","default":"false"},{"identifier":"delay","type":"number","default":"300"},{"identifier":"mask","type":"boolean","default":"true"},{"identifier":"title","type":"ReactNode","default":""},{"identifier":"footer","type":"ReactNode"},{"identifier":"closeIcon","type":"ReactNode","default":"<i>x</i>"},{"identifier":"closeOnClickMask","type":"boolean","default":"false"},{"identifier":"closeByEsc","type":"boolean","default":"false"},{"identifier":"NoScroll","type":"boolean","default":"false"},{"identifier":"onClose","type":"() => void"},{"identifier":"onClosed","type":"() => void"},{"identifier":"onOpen","type":"() => void"},{"identifier":"onOpened","type":"() => void"},{"identifier":"onCancel","type":"() => void"},{"identifier":"onConfirm","type":"() => void"}],"ConfirmDialog":[{"identifier":"cancelContent","type":"ReactNode"},{"identifier":"confirmContent","type":"ReactNode"},{"identifier":"cancel","type":"() => void"},{"identifier":"confirm","type":"() => void"},{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"any"},{"identifier":"className","type":"string"},{"identifier":"visible","type":"boolean"},{"identifier":"delay","type":"number"},{"identifier":"mask","type":"boolean"},{"identifier":"title","type":"ReactNode"},{"identifier":"footer","type":"ReactNode"},{"identifier":"closeIcon","type":"ReactNode"},{"identifier":"closeOnClickMask","type":"boolean"},{"identifier":"closeByEsc","type":"boolean"},{"identifier":"NoScroll","type":"boolean"},{"identifier":"onClose","type":"() => void"},{"identifier":"onClosed","type":"() => void"},{"identifier":"onOpen","type":"() => void"},{"identifier":"onOpened","type":"() => void"},{"identifier":"onCancel","type":"() => void"},{"identifier":"onConfirm","type":"() => void"}]},"form":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"any"},{"identifier":"className","type":"string"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}]},"input":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"type","type":"string"},{"identifier":"onPressEnter","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"addonBefore","type":"ReactNode"},{"identifier":"addonAfter","type":"ReactNode"},{"identifier":"prefix","type":"ReactNode"},{"identifier":"suffix","type":"ReactNode"},{"identifier":"allowClear","type":"boolean"},{"identifier":"bordered","type":"boolean"},{"identifier":"htmlSize","type":"number"},{"identifier":"onChange","type":"(e: any, val: any) => void"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"string | boolean"},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"\\"\\" | \\"anonymous\\" | \\"use-credentials\\""},{"identifier":"disabled","type":"boolean"},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"maxLength","type":"number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"size","type":"number"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"value","type":"string | number | readonly string[]"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"nonce","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}],"InputNumber":[{"identifier":"prefixCls","type":"string"},{"identifier":"addonBefore","type":"ReactNode"},{"identifier":"addonAfter","type":"ReactNode"},{"identifier":"stringMode","description":"value will show as string","type":"boolean"},{"identifier":"defaultValue","type":"ValueType"},{"identifier":"value","type":"ValueType"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"min","type":"ValueType"},{"identifier":"max","type":"ValueType"},{"identifier":"step","type":"ValueType"},{"identifier":"tabIndex","type":"number"},{"identifier":"controls","type":"boolean"},{"identifier":"upHandler","type":"ReactNode"},{"identifier":"downHandler","type":"ReactNode"},{"identifier":"keyboard","type":"boolean"},{"identifier":"parser","description":"Parse display value to validate number","type":"(displayValue: string) => ValueType"},{"identifier":"formatter","description":"Transform `value` to display value show in input","type":"(value: ValueType, info: { userTyping: boolean; input: string; }) => string"},{"identifier":"precision","description":"Syntactic sugar of `formatter`. Config precision of display.","type":"number"},{"identifier":"decimalSeparator","description":"Syntactic sugar of `formatter`. Config decimal separator of display.","type":"string"},{"identifier":"onInput","type":"(text: string) => void"},{"identifier":"onChange","type":"(value: ValueType) => void"},{"identifier":"onPressEnter","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onStep","type":"(value: ValueType, info: { offset: ValueType; type: \\"up\\" | \\"down\\"; }) => void"},{"identifier":"prefix","type":"string"},{"identifier":"type","type":"HTMLInputTypeAttribute"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"string | boolean"},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"\\"\\" | \\"anonymous\\" | \\"use-credentials\\""},{"identifier":"disabled","type":"boolean"},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"maxLength","type":"number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"size","type":"number"},{"identifier":"src","type":"string"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"nonce","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"boolean | \\"true\\" | \\"false\\""},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"ref","type":"Ref<HTMLInputElement>"},{"identifier":"key","type":"Key"}]},"pagination":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"locale","type":"\\"en\\" | \\"cn\\""},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"type","type":"\\"default\\" | \\"simple\\"","default":"default"},{"identifier":"total","type":"number","required":true},{"identifier":"pageNo","type":"number","default":"1"},{"identifier":"pageSize","type":"number","default":"10"},{"identifier":"showTotal","type":"boolean"},{"identifier":"showJumpInput","type":"boolean"},{"identifier":"showSizerSelect","type":"boolean"},{"identifier":"hidePagerNum","type":"number"},{"identifier":"itemRender","type":"{ prevNode?: (current: number) => ReactNode; nextNode?: (current: number) => ReactNode; totalNode?: (totalPage: number) => ReactNode; pagerNode?: (num: number) => ReactNode; }"},{"identifier":"onChange","type":"handlePageNo"},{"identifier":"onSizeChange","type":"() => void"},{"identifier":"onJumpChange","type":"handlePageNo"},{"identifier":"onPrevClick","type":"handlePageNo"},{"identifier":"onNextClick","type":"handlePageNo"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}]},"popover":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"any"},{"identifier":"className","type":"string"},{"identifier":"onClose","type":"(e: KeyboardEvent) => void"},{"identifier":"closeByEsc","type":"boolean","default":"true"},{"identifier":"container","type":"string | Element","default":"body"},{"identifier":"trigger","type":"\\"click\\" | \\"focus\\" | \\"hover\\"","default":"hover"},{"identifier":"triggerEvent","type":"any"},{"identifier":"target","type":"ReactNode"},{"identifier":"alignConfig","type":"any","default":"{\\r\\n    points: [\'bl\', \'tl\'],\\r\\n    offset: [0, 0],\\r\\n    targetOffset: [0, 0],\\r\\n    overflow: { adjustX: true, adjustY: true },\\r\\n  }"},{"identifier":"visible","type":"boolean","default":"false"},{"identifier":"onVisibleChange","type":"(val: boolean) => void"},{"identifier":"closeOnClickOutside","type":"boolean","default":"true"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}]},"rate":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"className","type":"string"},{"identifier":"character","type":"ReactNode"},{"identifier":"count","type":"number","default":"5"},{"identifier":"value","type":"number"},{"identifier":"defaultValue","type":"number","default":"5"},{"identifier":"allowHalf","type":"boolean"},{"identifier":"allowClear","type":"boolean"},{"identifier":"disabled","type":"boolean"},{"identifier":"onChange","type":"(value: number) => void"},{"identifier":"onHoverChange","type":"(value: number) => void"}],"FingerRate":[{"identifier":"character","type":"(ReactNode | ((props: FingerRateProps) => ReactNode))[]","default":"[\\n    <i className=\\"ob-icon icon-thumb-up-review\\">+</i>,\\n    <i className=\\"ob-icon icon-thumb-down-review\\">-</i>,\\n  ]"},{"identifier":"className","type":"string","default":"fingerRate"},{"identifier":"style","type":"CSSProperties"},{"identifier":"defaultValue","type":"number"},{"identifier":"disabled","type":"boolean","default":"false"},{"identifier":"onClick","type":"(e: MouseEvent<HTMLDivElement, MouseEvent> | KeyboardEvent<HTMLDivElement>, value?: boolean, key?: number) => void"}]},"select":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"className","type":"string"},{"identifier":"value","type":"string | number | (string | number)[]"},{"identifier":"trigger","type":"\\"click\\" | \\"hover\\""},{"identifier":"defaultSelected","type":"string | number | (string | number)[]"},{"identifier":"multiple","type":"boolean"},{"identifier":"onChange","type":"(val: any) => void"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}],"Option":[{"identifier":"prefixCls","type":"string"},{"identifier":"value","type":"string | number"},{"identifier":"selectedValue","type":"string | number"},{"identifier":"multiple","type":"boolean"},{"identifier":"selected","type":"boolean"},{"identifier":"onChange","type":"(val: any) => void"},{"identifier":"disabled","type":"boolean","default":"false"},{"identifier":"groupDisabled","type":"boolean"}],"OptGroup":[{"identifier":"prefixCls","type":"string"},{"identifier":"disabled","type":"boolean","default":"false"},{"identifier":"onChange","type":"(val: any) => void"}]},"upload":{"default":[{"identifier":"prefixCls","type":"string"},{"identifier":"type","type":"\\"drag\\" | \\"select\\"","default":"select"},{"identifier":"defaultFile","type":"FileProps[]"},{"identifier":"listValue","type":"FileProps[]"},{"identifier":"listType","type":"\\"picture\\" | \\"text\\" | \\"card\\""},{"identifier":"deleteIcon","type":"ReactNode","default":"<span>x</span>"},{"identifier":"itemRender","type":"false | ((file: FileProps, item: any) => ReactElement<any, string | JSXElementConstructor<any>>)"},{"identifier":"fileLimit","type":"number"},{"identifier":"onFileLimit","type":"(limit: number) => void"},{"identifier":"fileSize","type":"number"},{"identifier":"onFileSize","type":"(size: number) => void"},{"identifier":"onChange","type":"(file: FileProps, fileList: FileProps[]) => void"},{"identifier":"onStart","type":"(file: FileProps) => void"},{"identifier":"onError","type":"(error: Error, ret: Record<string, unknown>, file: FileProps) => void"},{"identifier":"onSuccess","type":"(response: Record<string, unknown>, file: FileProps, xhr: XMLHttpRequest) => void"},{"identifier":"onProgress","type":"(event: UploadProgressEvent, file: FileProps) => void"},{"identifier":"beforeUpload","type":"(file: FileProps, FileList: FileProps[]) => BeforeUploadFileType | Promise<void | BeforeUploadFileType>"},{"identifier":"name","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"component","type":"JSXElementConstructor<any>"},{"identifier":"action","type":"Action"},{"identifier":"method","type":"UploadRequestMethod"},{"identifier":"directory","type":"boolean"},{"identifier":"data","type":"Record<string, unknown> | ((file: string | FileProps | Blob) => Record<string, unknown>)"},{"identifier":"headers","type":"UploadRequestHeader"},{"identifier":"accept","type":"string"},{"identifier":"multiple","type":"boolean"},{"identifier":"customRequest","type":"(option: UploadRequestOption<any>) => void"},{"identifier":"withCredentials","type":"boolean"},{"identifier":"openFileDialogOnClick","type":"boolean"},{"identifier":"ref","type":"Ref<any>"},{"identifier":"key","type":"Key"}]}}')}}]);